import XCTest
@testable import Bitcoin

final class InvalidTransactionTests: XCTestCase {

    func testInvalidTransactions() throws {
        for vector in testVectors {
            guard let tx = BitcoinTransaction(Data(vector.serializedTransaction)) else {
                XCTFail(); continue
            }
            let previousOutputs = vector.previousOutputs.map { previousOutput in
                TransactionOutput(value: previousOutput.amount, script: BitcoinScript(previousOutput.scriptOperations))
            }
            var includeFlags = Set(vector.verifyFlags.split(separator: ","))
            includeFlags.remove("NONE")
            if includeFlags.contains("BADTX") {
                XCTAssertThrowsError(try tx.check())
                continue
            } else {
                XCTAssertNoThrow(try tx.check())
            }
            includeFlags.remove("BADTX")
            var config: ScriptConfig = []
            if includeFlags.contains("DERSIG") { config.insert(.strictDER) }
            if includeFlags.contains("SIGPUSHONLY") { config.insert(.pushOnly) }
            if includeFlags.contains("MINIMALDATA") { config.insert(.minimalData) }
            if includeFlags.contains("LOW_S") { config.insert(.lowS) }
            if includeFlags.contains("CLEANSTACK") { config.insert(.cleanStack) }
            if includeFlags.contains("NULLDUMMY") { config.insert(.nullDummy) }
            if includeFlags.contains("STRICTENC") { config.insert(.strictEncoding) }
            if includeFlags.contains("P2SH") { config.insert(.payToScriptHash) }
            if includeFlags.contains("CHECKLOCKTIMEVERIFY") { config.insert(.checkLockTimeVerify) }
            if includeFlags.contains("CHECKSEQUENCEVERIFY") { config.insert(.checkSequenceVerify) }
            if includeFlags.contains("CONST_SCRIPTCODE") { config.insert(.constantScriptCode) }
            if includeFlags.contains("WITNESS") { config.insert(.witness) }
            if includeFlags.contains("NULLFAIL") { config.insert(.nullFail) }
            if includeFlags.contains("DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM") { config.insert(.discourageUpgradableWitnessProgram) }
            let result = tx.verifyScript(previousOutputs: previousOutputs, config: config)
            XCTAssertFalse(result)

            if !includeFlags.isEmpty {
                let resultSuccess = tx.verifyScript(previousOutputs: previousOutputs, config: [])
                XCTAssert(resultSuccess)
            }
        }
    }
}

fileprivate struct TestVector {

    struct PreviousOutput {
        let transactionIdentifier: [UInt8]
        let outputIndex: Int
        let amount: Int
        let scriptOperations: [ScriptOperation]
    }

    let previousOutputs: [PreviousOutput]
    let serializedTransaction: [UInt8]
    let verifyFlags: String
}

fileprivate let testVectors: [TestVector] = [

    // MARK: - Invalid transactions
    // The following are deserialized transactions which are invalid.

    // 0e1b5688cf179cd9f7cbda1fac0090f6e684bbf8cd946660120197c3f3681809 but with extra junk appended to the end of the scriptPubKey
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x6c, 0xa7, 0xec, 0x7b, 0x18, 0x47, 0xf6, 0xbd, 0xbd, 0x73, 0x71, 0x76, 0x05, 0x0e, 0x6a, 0x08, 0xd6, 0x6c, 0xcd, 0x55, 0xbb, 0x94, 0xad, 0x24, 0xf4, 0x01, 0x80, 0x24, 0x10, 0x7a, 0x58, 0x27],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x04, 0x3b, 0x64, 0x0e, 0x98, 0x3c, 0x96, 0x90, 0xa1, 0x4c, 0x03, 0x9a, 0x20, 0x37, 0xec, 0xc3, 0x46, 0x7b, 0x27, 0xa0, 0xdc, 0xd5, 0x8f, 0x19, 0xd7, 0x6c, 0x7b, 0xc1, 0x18, 0xd0, 0x9f, 0xec, 0x45, 0xad, 0xc5, 0x37, 0x0a, 0x1c, 0x5b, 0xf8, 0x06, 0x7c, 0xa9, 0xf5, 0x55, 0x7a, 0x4c, 0xf8, 0x85, 0xfd, 0xb0, 0xfe, 0x0d, 0xcc, 0x9c, 0x3a, 0x71, 0x37, 0x22, 0x61, 0x06, 0xfb, 0xc7, 0x79, 0xa5])),
                    .checkSig,
                    .verify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x27, 0x58, 0x7a, 0x10, 0x24, 0x80, 0x01, 0xf4, 0x24, 0xad, 0x94, 0xbb, 0x55, 0xcd, 0x6c, 0xd6, 0x08, 0x6a, 0x0e, 0x05, 0x76, 0x71, 0x73, 0xbd, 0xbd, 0xf6, 0x47, 0x18, 0x7b, 0xec, 0xa7, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x48, 0x30, 0x45, 0x02, 0x20, 0x1b, 0x82, 0x2a, 0xd1, 0x0d, 0x6a, 0xdc, 0x1a, 0x34, 0x1a, 0xe8, 0x83, 0x5b, 0xe3, 0xf7, 0x0a, 0x25, 0x20, 0x1b, 0xbf, 0xf3, 0x1f, 0x59, 0xcb, 0xb9, 0xc5, 0x35, 0x3a, 0x5f, 0x0e, 0xca, 0x18, 0x02, 0x21, 0x00, 0xea, 0x7b, 0x2f, 0x70, 0x74, 0xe9, 0xaa, 0x9c, 0xf7, 0x0a, 0xa8, 0xd0, 0xff, 0xee, 0x13, 0xe6, 0xb4, 0x5d, 0xdd, 0xab, 0xf1, 0xab, 0x96, 0x1b, 0xda, 0x37, 0x8b, 0xcd, 0xb7, 0x78, 0xfa, 0x47, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0xf2, 0x05, 0x2a, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xfc, 0x50, 0xc5, 0x90, 0x7d, 0x86, 0xfe, 0xd4, 0x74, 0xba, 0x5c, 0xe8, 0xb1, 0x2a, 0x66, 0xe0, 0xa4, 0xc1, 0x39, 0xd8, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a non-standard pushdata prefix
    // See FindAndDelete, which will only remove if it uses the same pushdata prefix as is standard
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0x5b, 0x64, 0x62, 0x47, 0x54, 0x54, 0x71, 0x0f, 0x3c, 0x22, 0xf5, 0xfd, 0xf0, 0xb4, 0x07, 0x04, 0xc9, 0x2f, 0x25, 0xc3])),
                    .equalVerify,
                    .checkSigVerify,
                    .constant(1),
                    .pushData1(.init([0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x01])),
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x47, 0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x01, 0x21, 0x03, 0xba, 0x8c, 0x8b, 0x86, 0xde, 0xa1, 0x31, 0xc2, 0x2a, 0xb9, 0x67, 0xe6, 0xdd, 0x99, 0xbd, 0xae, 0x8e, 0xff, 0x7a, 0x1f, 0x75, 0xa2, 0xc3, 0x5f, 0x1f, 0x94, 0x41, 0x09, 0xe3, 0xfe, 0x5e, 0x22, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // Same as above, but with the sig in the scriptSig also pushed with the same non-standard OP_PUSHDATA
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0x5b, 0x64, 0x62, 0x47, 0x54, 0x54, 0x71, 0x0f, 0x3c, 0x22, 0xf5, 0xfd, 0xf0, 0xb4, 0x07, 0x04, 0xc9, 0x2f, 0x25, 0xc3])),
                    .equalVerify,
                    .checkSigVerify,
                    .constant(1),
                    .pushData1(.init([0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x01])),
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x4c, 0x47, 0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x01, 0x21, 0x03, 0xba, 0x8c, 0x8b, 0x86, 0xde, 0xa1, 0x31, 0xc2, 0x2a, 0xb9, 0x67, 0xe6, 0xdd, 0x99, 0xbd, 0xae, 0x8e, 0xff, 0x7a, 0x1f, 0x75, 0xa2, 0xc3, 0x5f, 0x1f, 0x94, 0x41, 0x09, 0xe3, 0xfe, 0x5e, 0x22, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a different hashtype suffix
    // See FindAndDelete, which will only remove if the signature, including the hash type, matches
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0x5b, 0x64, 0x62, 0x47, 0x54, 0x54, 0x71, 0x0f, 0x3c, 0x22, 0xf5, 0xfd, 0xf0, 0xb4, 0x07, 0x04, 0xc9, 0x2f, 0x25, 0xc3])),
                    .equalVerify,
                    .checkSigVerify,
                    .constant(1),
                    .pushBytes(.init([0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x81])),
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x47, 0x30, 0x44, 0x02, 0x20, 0x67, 0x28, 0x8e, 0xa5, 0x0a, 0xa7, 0x99, 0x54, 0x3a, 0x53, 0x6f, 0xf9, 0x30, 0x6f, 0x8e, 0x1c, 0xba, 0x05, 0xb9, 0xc6, 0xb1, 0x09, 0x51, 0x17, 0x5b, 0x92, 0x4f, 0x96, 0x73, 0x25, 0x55, 0xed, 0x02, 0x20, 0x26, 0xd7, 0xb5, 0x26, 0x5f, 0x38, 0xd2, 0x15, 0x41, 0x51, 0x9e, 0x4a, 0x1e, 0x55, 0x04, 0x4d, 0x5b, 0x9e, 0x17, 0xe1, 0x5c, 0xdb, 0xaf, 0x29, 0xae, 0x37, 0x92, 0xe9, 0x9e, 0x88, 0x3e, 0x7a, 0x01, 0x21, 0x03, 0xba, 0x8c, 0x8b, 0x86, 0xde, 0xa1, 0x31, 0xc2, 0x2a, 0xb9, 0x67, 0xe6, 0xdd, 0x99, 0xbd, 0xae, 0x8e, 0xff, 0x7a, 0x1f, 0x75, 0xa2, 0xc3, 0x5f, 0x1f, 0x94, 0x41, 0x09, 0xe3, 0xfe, 0x5e, 0x22, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // An invalid P2SH Transaction
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x7a, 0x05, 0x2c, 0x84, 0x0b, 0xa7, 0x3a, 0xf2, 0x67, 0x55, 0xde, 0x42, 0xcf, 0x01, 0xcc, 0x9e, 0x0a, 0x49, 0xfe, 0xf0])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x08, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH"
    ),

    // MARK: - Tests for CheckTransaction()

    // No outputs
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x05, 0xab, 0x9e, 0x14, 0xd9, 0x83, 0x74, 0x25, 0x13, 0xf0, 0xf4, 0x51, 0xe1, 0x05, 0xff, 0xb4, 0x19, 0x8d, 0x1d, 0xd4])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xf1, 0x67, 0x03, 0x10, 0x4a, 0xab, 0x4e, 0x40, 0x88, 0x31, 0x7c, 0x86, 0x2d, 0xae, 0xc8, 0x34, 0x40, 0x24, 0x24, 0x11, 0xb0, 0x39, 0xd1, 0x42, 0x80, 0xe0, 0x3d, 0xd3, 0x3b, 0x48, 0x7a, 0xb8, 0x02, 0x20, 0x13, 0x18, 0xa7, 0xbe, 0x23, 0x66, 0x72, 0xc5, 0xc5, 0x60, 0x83, 0xeb, 0x7a, 0x5a, 0x19, 0x5b, 0xc5, 0x7a, 0x40, 0xaf, 0x79, 0x23, 0xff, 0x85, 0x45, 0x01, 0x6c, 0xd3, 0xb5, 0x71, 0xe2, 0xa6, 0x01, 0x23, 0x21, 0x03, 0xc4, 0x0e, 0x5d, 0x33, 0x9d, 0xf3, 0xf3, 0x0b, 0xf7, 0x53, 0xe7, 0xe0, 0x44, 0x50, 0xae, 0x4e, 0xf7, 0x6c, 0x9e, 0x45, 0x58, 0x7d, 0x1d, 0x99, 0x3b, 0xdc, 0x4c, 0xd0, 0x6f, 0x06, 0x51, 0xc7, 0xac, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // Negative output
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0xae, 0x60, 0x9a, 0xca, 0x80, 0x61, 0xd7, 0x7c, 0x5e, 0x11, 0x1f, 0x6b, 0xb6, 0x25, 0x01, 0xa6, 0xbb, 0xe2, 0xbf, 0xdb])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x48, 0x30, 0x45, 0x02, 0x20, 0x06, 0x32, 0x22, 0xcb, 0xb1, 0x28, 0x73, 0x1f, 0xc0, 0x9d, 0xe0, 0xd7, 0x32, 0x37, 0x46, 0x53, 0x91, 0x66, 0x54, 0x4d, 0x6c, 0x1d, 0xf8, 0x4d, 0x86, 0x7c, 0xce, 0xa8, 0x4b, 0xcc, 0x89, 0x03, 0x02, 0x21, 0x00, 0xbf, 0x56, 0x8e, 0x85, 0x52, 0x84, 0x4d, 0xe6, 0x64, 0xcd, 0x41, 0x64, 0x8a, 0x03, 0x15, 0x54, 0x32, 0x7a, 0xa8, 0x84, 0x4a, 0xf3, 0x4b, 0x4f, 0x27, 0x39, 0x7c, 0x65, 0xb9, 0x2c, 0x04, 0xde, 0x01, 0x23, 0x21, 0x02, 0x43, 0xec, 0x37, 0xde, 0xe0, 0xe2, 0xe0, 0x53, 0xa9, 0xc9, 0x76, 0xf4, 0x31, 0x47, 0xe7, 0x9b, 0xc7, 0xd9, 0xdc, 0x60, 0x6e, 0xa5, 0x10, 0x10, 0xaf, 0x1a, 0xc8, 0x0d, 0xb6, 0xb0, 0x69, 0xe1, 0xac, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // MAX_MONEY + 1 output
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x32, 0xaf, 0xac, 0x28, 0x14, 0x62, 0xb8, 0x22, 0xad, 0xbe, 0xc5, 0x09, 0x4b, 0x8d, 0x4d, 0x33, 0x7d, 0xd5, 0xbd, 0x6a])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xe1, 0xea, 0xdb, 0xa0, 0x0d, 0x92, 0x96, 0xc7, 0x43, 0xcb, 0x6e, 0xcc, 0x70, 0x3f, 0xd9, 0xdd, 0xc9, 0xb3, 0xcd, 0x12, 0x90, 0x61, 0x76, 0xa2, 0x26, 0xae, 0x4c, 0x18, 0xd6, 0xb0, 0x07, 0x96, 0x02, 0x21, 0x00, 0xa7, 0x1a, 0xef, 0x7d, 0x28, 0x74, 0xde, 0xff, 0x68, 0x1b, 0xa6, 0x08, 0x0f, 0x1b, 0x27, 0x8b, 0xac, 0x7b, 0xb9, 0x9c, 0x61, 0xb0, 0x8a, 0x85, 0xf4, 0x31, 0x19, 0x70, 0xff, 0xe7, 0xf6, 0x3f, 0x01, 0x23, 0x21, 0x03, 0x0c, 0x05, 0x88, 0xdc, 0x44, 0xd9, 0x2b, 0xdc, 0xbf, 0x8e, 0x72, 0x09, 0x34, 0x66, 0x76, 0x6f, 0xdc, 0x26, 0x5e, 0xad, 0x8d, 0xb6, 0x45, 0x17, 0xb0, 0xc5, 0x42, 0x27, 0x5b, 0x70, 0xff, 0xfb, 0xac, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x40, 0x07, 0x5a, 0xf0, 0x75, 0x07, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // MAX_MONEY output + 1 output
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0xb5, 0x58, 0xcb, 0xf4, 0x93, 0x09, 0x54, 0xaa, 0x6a, 0x34, 0x43, 0x63, 0xa1, 0x56, 0x68, 0xd7, 0x47, 0x7a, 0xe7, 0x16])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x48, 0x30, 0x45, 0x02, 0x20, 0x27, 0xde, 0xcc, 0xc1, 0x4a, 0xa6, 0x66, 0x8e, 0x78, 0xa8, 0xc9, 0xda, 0x34, 0x84, 0xfb, 0xcd, 0x4f, 0x9d, 0xcc, 0x9b, 0xb7, 0xd1, 0xb8, 0x51, 0x46, 0x31, 0x4b, 0x21, 0xb9, 0xae, 0x4d, 0x86, 0x02, 0x21, 0x00, 0xd0, 0xb4, 0x3d, 0xec, 0xe8, 0xcf, 0xb0, 0x73, 0x48, 0xde, 0x0c, 0xa8, 0xbc, 0x5b, 0x86, 0x27, 0x6f, 0xa8, 0x8f, 0x7f, 0x21, 0x38, 0x38, 0x11, 0x28, 0xb7, 0xc3, 0x6a, 0xb2, 0xe4, 0x22, 0x64, 0x01, 0x23, 0x21, 0x02, 0x9b, 0xb1, 0x34, 0x63, 0xdd, 0xd5, 0xd2, 0xcc, 0x05, 0xda, 0x6e, 0x84, 0xe3, 0x75, 0x36, 0xcb, 0x95, 0x25, 0x70, 0x3c, 0xfd, 0x8f, 0x43, 0xaf, 0xdb, 0x41, 0x49, 0x88, 0x98, 0x7a, 0x92, 0xf6, 0xac, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x40, 0x07, 0x5a, 0xf0, 0x75, 0x07, 0x00, 0x01, 0x51, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // Duplicate inputs
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x23, 0x6d, 0x06, 0x39, 0xdb, 0x62, 0xb0, 0x77, 0x3f, 0xd8, 0xac, 0x34, 0xdc, 0x85, 0xae, 0x19, 0xe9, 0xab, 0xa8, 0x0a])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x47, 0x30, 0x44, 0x02, 0x20, 0x4b, 0xb1, 0x19, 0x70, 0x53, 0xd0, 0xd7, 0x79, 0x9b, 0xf1, 0xb3, 0x0c, 0xd5, 0x03, 0xc4, 0x4b, 0x58, 0xd6, 0x24, 0x0c, 0xcc, 0xbd, 0xc8, 0x5b, 0x6f, 0xe7, 0x6d, 0x08, 0x79, 0x80, 0x20, 0x8f, 0x02, 0x20, 0x4b, 0xee, 0xed, 0x78, 0x20, 0x01, 0x78, 0xff, 0xc6, 0xc7, 0x42, 0x37, 0xbb, 0x74, 0xb3, 0xf2, 0x76, 0xbb, 0xb4, 0x09, 0x8b, 0x56, 0x05, 0xd8, 0x14, 0x30, 0x4f, 0xe1, 0x28, 0xbf, 0x14, 0x31, 0x01, 0x23, 0x21, 0x03, 0x9e, 0x88, 0x15, 0xe1, 0x59, 0x52, 0xa7, 0xc3, 0xfa, 0xda, 0x19, 0x05, 0xf8, 0xcf, 0x55, 0x41, 0x98, 0x37, 0x13, 0x3b, 0xd7, 0x75, 0x6c, 0x0e, 0xf1, 0x4f, 0xc8, 0xdf, 0xe5, 0x0c, 0x0d, 0xea, 0xac, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x47, 0x30, 0x44, 0x02, 0x20, 0x23, 0x06, 0x48, 0x9a, 0xfe, 0xf5, 0x2a, 0x6f, 0x62, 0xe9, 0x0b, 0xf7, 0x50, 0xbb, 0xcd, 0xf4, 0x0c, 0x06, 0xf5, 0xc6, 0xb1, 0x38, 0x28, 0x6e, 0x6b, 0x6b, 0x86, 0x17, 0x6b, 0xb9, 0x34, 0x18, 0x02, 0x20, 0x0d, 0xba, 0x98, 0x48, 0x6e, 0xa6, 0x83, 0x80, 0xf4, 0x7e, 0xbb, 0x19, 0xa7, 0xdf, 0x17, 0x3b, 0x99, 0xe6, 0xbc, 0x9c, 0x68, 0x1d, 0x6c, 0xcf, 0x3b, 0xde, 0x31, 0x46, 0x5d, 0x1f, 0x16, 0xb3, 0x01, 0x23, 0x21, 0x03, 0x9e, 0x88, 0x15, 0xe1, 0x59, 0x52, 0xa7, 0xc3, 0xfa, 0xda, 0x19, 0x05, 0xf8, 0xcf, 0x55, 0x41, 0x98, 0x37, 0x13, 0x3b, 0xd7, 0x75, 0x6c, 0x0e, 0xf1, 0x4f, 0xc8, 0xdf, 0xe5, 0x0c, 0x0d, 0xea, 0xac, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // Coinbase of size 1
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
                outputIndex: -1,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x51, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // Coinbase of size 101
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
                outputIndex: -1,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x65, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // Null txin, but without being a coinbase (because there are two inputs)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
                outputIndex: -1,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
                outputIndex: -1,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "BADTX"
    ),

    // MARK: - Other invalid transactions

    // Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x5e, 0x7f, 0x0d, 0x4d, 0x08, 0x41, 0xbc, 0xd5, 0x6c, 0x39, 0x33, 0x7e, 0xd0, 0x86, 0xb1, 0xa6, 0x33, 0xee, 0x77, 0x0c, 0x1f, 0xfd, 0xd9, 0x4a, 0xc5, 0x52, 0xa9, 0x5a, 0xc2, 0xce, 0x0e, 0xfc])),
                    .checkSig
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x5e, 0x7f, 0x0d, 0x4d, 0x08, 0x41, 0xbc, 0xd5, 0x6c, 0x39, 0x33, 0x7e, 0xd0, 0x86, 0xb1, 0xa6, 0x33, 0xee, 0x77, 0x0c, 0x1f, 0xfd, 0xd9, 0x4a, 0xc5, 0x52, 0xa9, 0x5a, 0xc2, 0xce, 0x0e, 0xfc])),
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x48, 0x30, 0x45, 0x02, 0x20, 0x3a, 0x0f, 0x5f, 0x0e, 0x1f, 0x2b, 0xdb, 0xcd, 0x04, 0xdb, 0x30, 0x61, 0xd1, 0x8f, 0x3a, 0xf7, 0x0e, 0x07, 0xf4, 0xf4, 0x67, 0xcb, 0xc1, 0xb8, 0x11, 0x6f, 0x26, 0x70, 0x25, 0xf5, 0x36, 0x0b, 0x02, 0x21, 0x00, 0xc7, 0x92, 0xb6, 0xe2, 0x15, 0xaf, 0xc5, 0xaf, 0xc7, 0x21, 0xa3, 0x51, 0xec, 0x41, 0x3e, 0x71, 0x43, 0x05, 0xcb, 0x74, 0x9a, 0xae, 0x3d, 0x7f, 0xee, 0x76, 0x62, 0x13, 0x13, 0x41, 0x8d, 0xf1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x47, 0x30, 0x44, 0x02, 0x20, 0x20, 0x1d, 0xc2, 0xd0, 0x30, 0xe3, 0x80, 0xe8, 0xf9, 0xcf, 0xb4, 0x1b, 0x44, 0x2d, 0x93, 0x0f, 0xa5, 0xa6, 0x85, 0xbb, 0x2c, 0x8d, 0xb5, 0x90, 0x66, 0x71, 0xf8, 0x65, 0x50, 0x7d, 0x06, 0x70, 0x02, 0x20, 0x18, 0xd9, 0xe7, 0xa8, 0xd4, 0xc8, 0xd8, 0x6a, 0x73, 0xc2, 0xa7, 0x24, 0xee, 0x38, 0xef, 0x98, 0x3e, 0xc2, 0x49, 0x82, 0x7e, 0x0e, 0x46, 0x48, 0x41, 0x73, 0x59, 0x55, 0xc7, 0x07, 0xec, 0xe9, 0x81, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // CHECKMULTISIG with incorrect signature order
    // Note the input is just required to make the tester happy
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xb3, 0xda, 0x01, 0xdd, 0x4a, 0xae, 0x68, 0x3c, 0x7a, 0xee, 0x4d, 0x5d, 0x8b, 0x52, 0xa5, 0x40, 0xa5, 0x08, 0xe1, 0x11, 0x5f, 0x77, 0xcd, 0x7f, 0xa9, 0xa2, 0x91, 0x24, 0x3f, 0x50, 0x12, 0x23],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0xb1, 0xce, 0x99, 0x29, 0x8d, 0x5f, 0x07, 0x36, 0x4b, 0x57, 0xb1, 0xe5, 0xc9, 0xcc, 0x00, 0xbe, 0x0b, 0x04, 0xa9, 0x54])),
                    .equal
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x23, 0x12, 0x50, 0x3f, 0x24, 0x91, 0xa2, 0xa9, 0x7f, 0xcd, 0x77, 0x5f, 0x11, 0xe1, 0x08, 0xa5, 0x40, 0xa5, 0x52, 0x8b, 0x5d, 0x4d, 0xee, 0x7a, 0x3c, 0x68, 0xae, 0x4a, 0xdd, 0x01, 0xda, 0xb3, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xfe, 0x00, 0x00, 0x48, 0x30, 0x45, 0x02, 0x20, 0x7a, 0xac, 0xee, 0x82, 0x0e, 0x08, 0xb0, 0xb1, 0x74, 0xe2, 0x48, 0xab, 0xd8, 0xd7, 0xa3, 0x4e, 0xd6, 0x3b, 0x5d, 0xa3, 0xab, 0xed, 0xb9, 0x99, 0x34, 0xdf, 0x9f, 0xdd, 0xd6, 0x5c, 0x05, 0xc4, 0x02, 0x21, 0x00, 0xdf, 0xe8, 0x78, 0x96, 0xab, 0x5e, 0xe3, 0xdf, 0x47, 0x6c, 0x26, 0x55, 0xf9, 0xfb, 0xe5, 0xbd, 0x08, 0x9d, 0xcc, 0xbe, 0xf3, 0xe4, 0xea, 0x05, 0xb5, 0xd1, 0x21, 0x16, 0x9f, 0xe7, 0xf5, 0xf4, 0x01, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xf6, 0x64, 0x9b, 0x0e, 0xdd, 0xfd, 0xfd, 0x4a, 0xd5, 0x54, 0x26, 0x66, 0x33, 0x85, 0x09, 0x0d, 0x51, 0xee, 0x86, 0xc3, 0x48, 0x1b, 0xdc, 0x6b, 0x0c, 0x18, 0xea, 0x6c, 0x0e, 0xce, 0x2c, 0x0b, 0x02, 0x20, 0x56, 0x1c, 0x31, 0x5b, 0x07, 0xcf, 0xfa, 0x6f, 0x7d, 0xd9, 0xdf, 0x96, 0xdb, 0xae, 0x92, 0x00, 0xc2, 0xde, 0xe0, 0x9b, 0xf9, 0x3c, 0xc3, 0x5c, 0xa0, 0x5e, 0x6c, 0xdf, 0x61, 0x33, 0x40, 0xaa, 0x01, 0x4c, 0x69, 0x52, 0x21, 0x03, 0x1d, 0x11, 0xdb, 0x38, 0x97, 0x2b, 0x71, 0x2a, 0x9f, 0xe1, 0xfc, 0x02, 0x35, 0x77, 0xc7, 0xae, 0x3d, 0xdb, 0x4a, 0x30, 0x04, 0x18, 0x7d, 0x41, 0xc4, 0x51, 0x21, 0xee, 0xcf, 0xdb, 0xb5, 0xb7, 0x21, 0x02, 0x07, 0xec, 0x36, 0x91, 0x1b, 0x6a, 0xd2, 0x38, 0x28, 0x60, 0xd3, 0x29, 0x89, 0xc7, 0xb8, 0x72, 0x8e, 0x94, 0x89, 0xd7, 0xbb, 0xc9, 0x4a, 0x6b, 0x55, 0x09, 0xef, 0x00, 0x29, 0xbe, 0x12, 0x88, 0x21, 0x02, 0x4e, 0xa9, 0xfa, 0xc0, 0x6f, 0x66, 0x6a, 0x4a, 0xdc, 0x3f, 0xc1, 0x35, 0x7b, 0x7b, 0xec, 0x1f, 0xd0, 0xbd, 0xec, 0xe2, 0xb9, 0xd0, 0x85, 0x79, 0x22, 0x6a, 0x8e, 0xbd, 0xe5, 0x30, 0x58, 0xe4, 0x53, 0xae, 0xff, 0xff, 0xff, 0xff, 0x01, 0x80, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xc9, 0xb9, 0x9c, 0xdd, 0xf8, 0x47, 0xd1, 0x06, 0x85, 0xa4, 0xfa, 0xba, 0xa0, 0xba, 0xf5, 0x05, 0xf7, 0xc3, 0xdf, 0xab, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH"
    ),

    // The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63
    // It is an OP_CHECKMULTISIG with the dummy value missing
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .pushBytes(.init([0x04, 0xcc, 0x71, 0xeb, 0x30, 0xd6, 0x53, 0xc0, 0xc3, 0x16, 0x39, 0x90, 0xc4, 0x7b, 0x97, 0x6f, 0x3f, 0xb3, 0xf3, 0x7c, 0xcc, 0xdc, 0xbe, 0xdb, 0x16, 0x9a, 0x1d, 0xfe, 0xf5, 0x8b, 0xbf, 0xbf, 0xaf, 0xf7, 0xd8, 0xa4, 0x73, 0xe7, 0xe2, 0xe6, 0xd3, 0x17, 0xb8, 0x7b, 0xaf, 0xe8, 0xbd, 0xe9, 0x7e, 0x3c, 0xf8, 0xf0, 0x65, 0xde, 0xc0, 0x22, 0xb5, 0x1d, 0x11, 0xfc, 0xdd, 0x0d, 0x34, 0x8a, 0xc4])),
                    .pushBytes(.init([0x04, 0x61, 0xcb, 0xdc, 0xc5, 0x40, 0x9f, 0xb4, 0xb4, 0xd4, 0x2b, 0x51, 0xd3, 0x33, 0x81, 0x35, 0x4d, 0x80, 0xe5, 0x50, 0x07, 0x8c, 0xb5, 0x32, 0xa3, 0x4b, 0xfa, 0x2f, 0xcf, 0xde, 0xb7, 0xd7, 0x65, 0x19, 0xae, 0xcc, 0x62, 0x77, 0x0f, 0x5b, 0x0e, 0x4e, 0xf8, 0x55, 0x19, 0x46, 0xd8, 0xa5, 0x40, 0x91, 0x1a, 0xbe, 0x3e, 0x78, 0x54, 0xa2, 0x6f, 0x39, 0xf5, 0x8b, 0x25, 0xc1, 0x53, 0x42, 0xaf])),
                    .constant(2),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x4b, 0xdc, 0xbc, 0x3e, 0x01, 0xbd, 0xaa, 0xd3, 0x6c, 0xc0, 0x8e, 0x81, 0xe6, 0x9c, 0x82, 0xe1, 0x06, 0x0b, 0xc1, 0x4e, 0x51, 0x8d, 0xb2, 0xb4, 0x9a, 0xa4, 0x3a, 0xd9, 0x0b, 0xa2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x48, 0x47, 0x30, 0x44, 0x02, 0x20, 0x3f, 0x16, 0xc6, 0xf4, 0x01, 0x62, 0xab, 0x68, 0x66, 0x21, 0xef, 0x30, 0x00, 0xb0, 0x4e, 0x75, 0x41, 0x8a, 0x0c, 0x0c, 0xb2, 0xd8, 0xae, 0xbe, 0xac, 0x89, 0x4a, 0xe3, 0x60, 0xac, 0x1e, 0x78, 0x02, 0x20, 0xdd, 0xc1, 0x5e, 0xcd, 0xfc, 0x35, 0x07, 0xac, 0x48, 0xe1, 0x68, 0x1a, 0x33, 0xeb, 0x60, 0x99, 0x66, 0x31, 0xbf, 0x6b, 0xf5, 0xbc, 0x0a, 0x06, 0x82, 0xc4, 0xdb, 0x74, 0x3c, 0xe7, 0xca, 0x2b, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x42, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x66, 0x0d, 0x4e, 0xf3, 0xa7, 0x43, 0xe3, 0xe6, 0x96, 0xad, 0x99, 0x03, 0x64, 0xe5, 0x55, 0xc2, 0x71, 0xad, 0x50, 0x4b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // MARK: - CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests:

    // The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63
    // It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x60, 0xa2, 0x0b, 0xd9, 0x3a, 0xa4, 0x9a, 0xb4, 0xb2, 0x8d, 0x51, 0x4e, 0xc1, 0x0b, 0x06, 0xe1, 0x82, 0x9c, 0xe6, 0x81, 0x8e, 0xc0, 0x6c, 0xd3, 0xaa, 0xbd, 0x01, 0x3e, 0xbc, 0xdc, 0x4b, 0xb1],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .pushBytes(.init([0x04, 0xcc, 0x71, 0xeb, 0x30, 0xd6, 0x53, 0xc0, 0xc3, 0x16, 0x39, 0x90, 0xc4, 0x7b, 0x97, 0x6f, 0x3f, 0xb3, 0xf3, 0x7c, 0xcc, 0xdc, 0xbe, 0xdb, 0x16, 0x9a, 0x1d, 0xfe, 0xf5, 0x8b, 0xbf, 0xbf, 0xaf, 0xf7, 0xd8, 0xa4, 0x73, 0xe7, 0xe2, 0xe6, 0xd3, 0x17, 0xb8, 0x7b, 0xaf, 0xe8, 0xbd, 0xe9, 0x7e, 0x3c, 0xf8, 0xf0, 0x65, 0xde, 0xc0, 0x22, 0xb5, 0x1d, 0x11, 0xfc, 0xdd, 0x0d, 0x34, 0x8a, 0xc4])),
                    .pushBytes(.init([0x04, 0x61, 0xcb, 0xdc, 0xc5, 0x40, 0x9f, 0xb4, 0xb4, 0xd4, 0x2b, 0x51, 0xd3, 0x33, 0x81, 0x35, 0x4d, 0x80, 0xe5, 0x50, 0x07, 0x8c, 0xb5, 0x32, 0xa3, 0x4b, 0xfa, 0x2f, 0xcf, 0xde, 0xb7, 0xd7, 0x65, 0x19, 0xae, 0xcc, 0x62, 0x77, 0x0f, 0x5b, 0x0e, 0x4e, 0xf8, 0x55, 0x19, 0x46, 0xd8, 0xa5, 0x40, 0x91, 0x1a, 0xbe, 0x3e, 0x78, 0x54, 0xa2, 0x6f, 0x39, 0xf5, 0x8b, 0x25, 0xc1, 0x53, 0x42, 0xaf])),
                    .constant(2),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x4b, 0xdc, 0xbc, 0x3e, 0x01, 0xbd, 0xaa, 0xd3, 0x6c, 0xc0, 0x8e, 0x81, 0xe6, 0x9c, 0x82, 0xe1, 0x06, 0x0b, 0xc1, 0x4e, 0x51, 0x8d, 0xb2, 0xb4, 0x9a, 0xa4, 0x3a, 0xd9, 0x0b, 0xa2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x47, 0x30, 0x44, 0x02, 0x20, 0x3f, 0x16, 0xc6, 0xf4, 0x01, 0x62, 0xab, 0x68, 0x66, 0x21, 0xef, 0x30, 0x00, 0xb0, 0x4e, 0x75, 0x41, 0x8a, 0x0c, 0x0c, 0xb2, 0xd8, 0xae, 0xbe, 0xac, 0x89, 0x4a, 0xe3, 0x60, 0xac, 0x1e, 0x78, 0x02, 0x20, 0xdd, 0xc1, 0x5e, 0xcd, 0xfc, 0x35, 0x07, 0xac, 0x48, 0xe1, 0x68, 0x1a, 0x33, 0xeb, 0x60, 0x99, 0x66, 0x31, 0xbf, 0x6b, 0xf5, 0xbc, 0x0a, 0x06, 0x82, 0xc4, 0xdb, 0x74, 0x3c, 0xe7, 0xca, 0x2b, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x42, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x66, 0x0d, 0x4e, 0xf3, 0xa7, 0x43, 0xe3, 0xe6, 0x96, 0xad, 0x99, 0x03, 0x64, 0xe5, 0x55, 0xc2, 0x71, 0xad, 0x50, 0x4b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NULLDUMMY"
    ),

    // As above, but using an OP_1
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x60, 0xa2, 0x0b, 0xd9, 0x3a, 0xa4, 0x9a, 0xb4, 0xb2, 0x8d, 0x51, 0x4e, 0xc1, 0x0b, 0x06, 0xe1, 0x82, 0x9c, 0xe6, 0x81, 0x8e, 0xc0, 0x6c, 0xd3, 0xaa, 0xbd, 0x01, 0x3e, 0xbc, 0xdc, 0x4b, 0xb1],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .pushBytes(.init([0x04, 0xcc, 0x71, 0xeb, 0x30, 0xd6, 0x53, 0xc0, 0xc3, 0x16, 0x39, 0x90, 0xc4, 0x7b, 0x97, 0x6f, 0x3f, 0xb3, 0xf3, 0x7c, 0xcc, 0xdc, 0xbe, 0xdb, 0x16, 0x9a, 0x1d, 0xfe, 0xf5, 0x8b, 0xbf, 0xbf, 0xaf, 0xf7, 0xd8, 0xa4, 0x73, 0xe7, 0xe2, 0xe6, 0xd3, 0x17, 0xb8, 0x7b, 0xaf, 0xe8, 0xbd, 0xe9, 0x7e, 0x3c, 0xf8, 0xf0, 0x65, 0xde, 0xc0, 0x22, 0xb5, 0x1d, 0x11, 0xfc, 0xdd, 0x0d, 0x34, 0x8a, 0xc4])),
                    .pushBytes(.init([0x04, 0x61, 0xcb, 0xdc, 0xc5, 0x40, 0x9f, 0xb4, 0xb4, 0xd4, 0x2b, 0x51, 0xd3, 0x33, 0x81, 0x35, 0x4d, 0x80, 0xe5, 0x50, 0x07, 0x8c, 0xb5, 0x32, 0xa3, 0x4b, 0xfa, 0x2f, 0xcf, 0xde, 0xb7, 0xd7, 0x65, 0x19, 0xae, 0xcc, 0x62, 0x77, 0x0f, 0x5b, 0x0e, 0x4e, 0xf8, 0x55, 0x19, 0x46, 0xd8, 0xa5, 0x40, 0x91, 0x1a, 0xbe, 0x3e, 0x78, 0x54, 0xa2, 0x6f, 0x39, 0xf5, 0x8b, 0x25, 0xc1, 0x53, 0x42, 0xaf])),
                    .constant(2),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x4b, 0xdc, 0xbc, 0x3e, 0x01, 0xbd, 0xaa, 0xd3, 0x6c, 0xc0, 0x8e, 0x81, 0xe6, 0x9c, 0x82, 0xe1, 0x06, 0x0b, 0xc1, 0x4e, 0x51, 0x8d, 0xb2, 0xb4, 0x9a, 0xa4, 0x3a, 0xd9, 0x0b, 0xa2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x49, 0x51, 0x47, 0x30, 0x44, 0x02, 0x20, 0x3f, 0x16, 0xc6, 0xf4, 0x01, 0x62, 0xab, 0x68, 0x66, 0x21, 0xef, 0x30, 0x00, 0xb0, 0x4e, 0x75, 0x41, 0x8a, 0x0c, 0x0c, 0xb2, 0xd8, 0xae, 0xbe, 0xac, 0x89, 0x4a, 0xe3, 0x60, 0xac, 0x1e, 0x78, 0x02, 0x20, 0xdd, 0xc1, 0x5e, 0xcd, 0xfc, 0x35, 0x07, 0xac, 0x48, 0xe1, 0x68, 0x1a, 0x33, 0xeb, 0x60, 0x99, 0x66, 0x31, 0xbf, 0x6b, 0xf5, 0xbc, 0x0a, 0x06, 0x82, 0xc4, 0xdb, 0x74, 0x3c, 0xe7, 0xca, 0x2b, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x42, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x66, 0x0d, 0x4e, 0xf3, 0xa7, 0x43, 0xe3, 0xe6, 0x96, 0xad, 0x99, 0x03, 0x64, 0xe5, 0x55, 0xc2, 0x71, 0xad, 0x50, 0x4b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NULLDUMMY"
    ),

    // As above, but using an OP_1NEGATE
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x60, 0xa2, 0x0b, 0xd9, 0x3a, 0xa4, 0x9a, 0xb4, 0xb2, 0x8d, 0x51, 0x4e, 0xc1, 0x0b, 0x06, 0xe1, 0x82, 0x9c, 0xe6, 0x81, 0x8e, 0xc0, 0x6c, 0xd3, 0xaa, 0xbd, 0x01, 0x3e, 0xbc, 0xdc, 0x4b, 0xb1],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .pushBytes(.init([0x04, 0xcc, 0x71, 0xeb, 0x30, 0xd6, 0x53, 0xc0, 0xc3, 0x16, 0x39, 0x90, 0xc4, 0x7b, 0x97, 0x6f, 0x3f, 0xb3, 0xf3, 0x7c, 0xcc, 0xdc, 0xbe, 0xdb, 0x16, 0x9a, 0x1d, 0xfe, 0xf5, 0x8b, 0xbf, 0xbf, 0xaf, 0xf7, 0xd8, 0xa4, 0x73, 0xe7, 0xe2, 0xe6, 0xd3, 0x17, 0xb8, 0x7b, 0xaf, 0xe8, 0xbd, 0xe9, 0x7e, 0x3c, 0xf8, 0xf0, 0x65, 0xde, 0xc0, 0x22, 0xb5, 0x1d, 0x11, 0xfc, 0xdd, 0x0d, 0x34, 0x8a, 0xc4])),
                    .pushBytes(.init([0x04, 0x61, 0xcb, 0xdc, 0xc5, 0x40, 0x9f, 0xb4, 0xb4, 0xd4, 0x2b, 0x51, 0xd3, 0x33, 0x81, 0x35, 0x4d, 0x80, 0xe5, 0x50, 0x07, 0x8c, 0xb5, 0x32, 0xa3, 0x4b, 0xfa, 0x2f, 0xcf, 0xde, 0xb7, 0xd7, 0x65, 0x19, 0xae, 0xcc, 0x62, 0x77, 0x0f, 0x5b, 0x0e, 0x4e, 0xf8, 0x55, 0x19, 0x46, 0xd8, 0xa5, 0x40, 0x91, 0x1a, 0xbe, 0x3e, 0x78, 0x54, 0xa2, 0x6f, 0x39, 0xf5, 0x8b, 0x25, 0xc1, 0x53, 0x42, 0xaf])),
                    .constant(2),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x4b, 0xdc, 0xbc, 0x3e, 0x01, 0xbd, 0xaa, 0xd3, 0x6c, 0xc0, 0x8e, 0x81, 0xe6, 0x9c, 0x82, 0xe1, 0x06, 0x0b, 0xc1, 0x4e, 0x51, 0x8d, 0xb2, 0xb4, 0x9a, 0xa4, 0x3a, 0xd9, 0x0b, 0xa2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4f, 0x47, 0x30, 0x44, 0x02, 0x20, 0x3f, 0x16, 0xc6, 0xf4, 0x01, 0x62, 0xab, 0x68, 0x66, 0x21, 0xef, 0x30, 0x00, 0xb0, 0x4e, 0x75, 0x41, 0x8a, 0x0c, 0x0c, 0xb2, 0xd8, 0xae, 0xbe, 0xac, 0x89, 0x4a, 0xe3, 0x60, 0xac, 0x1e, 0x78, 0x02, 0x20, 0xdd, 0xc1, 0x5e, 0xcd, 0xfc, 0x35, 0x07, 0xac, 0x48, 0xe1, 0x68, 0x1a, 0x33, 0xeb, 0x60, 0x99, 0x66, 0x31, 0xbf, 0x6b, 0xf5, 0xbc, 0x0a, 0x06, 0x82, 0xc4, 0xdb, 0x74, 0x3c, 0xe7, 0xca, 0x2b, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x42, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x66, 0x0d, 0x4e, 0xf3, 0xa7, 0x43, 0xe3, 0xe6, 0x96, 0xad, 0x99, 0x03, 0x64, 0xe5, 0x55, 0xc2, 0x71, 0xad, 0x50, 0x4b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NULLDUMMY"
    ),

    // As above, but with the dummy byte missing
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x60, 0xa2, 0x0b, 0xd9, 0x3a, 0xa4, 0x9a, 0xb4, 0xb2, 0x8d, 0x51, 0x4e, 0xc1, 0x0b, 0x06, 0xe1, 0x82, 0x9c, 0xe6, 0x81, 0x8e, 0xc0, 0x6c, 0xd3, 0xaa, 0xbd, 0x01, 0x3e, 0xbc, 0xdc, 0x4b, 0xb1],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .pushBytes(.init([0x04, 0xcc, 0x71, 0xeb, 0x30, 0xd6, 0x53, 0xc0, 0xc3, 0x16, 0x39, 0x90, 0xc4, 0x7b, 0x97, 0x6f, 0x3f, 0xb3, 0xf3, 0x7c, 0xcc, 0xdc, 0xbe, 0xdb, 0x16, 0x9a, 0x1d, 0xfe, 0xf5, 0x8b, 0xbf, 0xbf, 0xaf, 0xf7, 0xd8, 0xa4, 0x73, 0xe7, 0xe2, 0xe6, 0xd3, 0x17, 0xb8, 0x7b, 0xaf, 0xe8, 0xbd, 0xe9, 0x7e, 0x3c, 0xf8, 0xf0, 0x65, 0xde, 0xc0, 0x22, 0xb5, 0x1d, 0x11, 0xfc, 0xdd, 0x0d, 0x34, 0x8a, 0xc4])),
                    .pushBytes(.init([0x04, 0x61, 0xcb, 0xdc, 0xc5, 0x40, 0x9f, 0xb4, 0xb4, 0xd4, 0x2b, 0x51, 0xd3, 0x33, 0x81, 0x35, 0x4d, 0x80, 0xe5, 0x50, 0x07, 0x8c, 0xb5, 0x32, 0xa3, 0x4b, 0xfa, 0x2f, 0xcf, 0xde, 0xb7, 0xd7, 0x65, 0x19, 0xae, 0xcc, 0x62, 0x77, 0x0f, 0x5b, 0x0e, 0x4e, 0xf8, 0x55, 0x19, 0x46, 0xd8, 0xa5, 0x40, 0x91, 0x1a, 0xbe, 0x3e, 0x78, 0x54, 0xa2, 0x6f, 0x39, 0xf5, 0x8b, 0x25, 0xc1, 0x53, 0x42, 0xaf])),
                    .constant(2),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x4b, 0xdc, 0xbc, 0x3e, 0x01, 0xbd, 0xaa, 0xd3, 0x6c, 0xc0, 0x8e, 0x81, 0xe6, 0x9c, 0x82, 0xe1, 0x06, 0x0b, 0xc1, 0x4e, 0x51, 0x8d, 0xb2, 0xb4, 0x9a, 0xa4, 0x3a, 0xd9, 0x0b, 0xa2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x48, 0x47, 0x30, 0x44, 0x02, 0x20, 0x3f, 0x16, 0xc6, 0xf4, 0x01, 0x62, 0xab, 0x68, 0x66, 0x21, 0xef, 0x30, 0x00, 0xb0, 0x4e, 0x75, 0x41, 0x8a, 0x0c, 0x0c, 0xb2, 0xd8, 0xae, 0xbe, 0xac, 0x89, 0x4a, 0xe3, 0x60, 0xac, 0x1e, 0x78, 0x02, 0x20, 0xdd, 0xc1, 0x5e, 0xcd, 0xfc, 0x35, 0x07, 0xac, 0x48, 0xe1, 0x68, 0x1a, 0x33, 0xeb, 0x60, 0x99, 0x66, 0x31, 0xbf, 0x6b, 0xf5, 0xbc, 0x0a, 0x06, 0x82, 0xc4, 0xdb, 0x74, 0x3c, 0xe7, 0xca, 0x2b, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x42, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x66, 0x0d, 0x4e, 0xf3, 0xa7, 0x43, 0xe3, 0xe6, 0x96, 0xad, 0x99, 0x03, 0x64, 0xe5, 0x55, 0xc2, 0x71, 0xad, 0x50, 0x4b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // Empty stack when we try to run CHECKSIG
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xad, 0x50, 0x3f, 0x72, 0xc1, 0x8d, 0xf5, 0x80, 0x1e, 0xe6, 0x4d, 0x76, 0x09, 0x0a, 0xfe, 0x4c, 0x60, 0x7f, 0xb2, 0xb8, 0x22, 0xe9, 0xb7, 0xb6, 0x3c, 0x58, 0x26, 0xc5, 0x0e, 0x22, 0xfc, 0x3b],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x02, 0x7c, 0x3a, 0x97, 0x66, 0x5b, 0xf2, 0x83, 0xa1, 0x02, 0xa5, 0x87, 0xa6, 0x2a, 0x30, 0xa0, 0xc1, 0x02, 0xd4, 0xd3, 0xb1, 0x41, 0x01, 0x5e, 0x2c, 0xae, 0x6f, 0x64, 0xe2, 0x54, 0x31, 0x13, 0xe5])),
                    .checkSig,
                    .not
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x3b, 0xfc, 0x22, 0x0e, 0xc5, 0x26, 0x58, 0x3c, 0xb6, 0xb7, 0xe9, 0x22, 0xb8, 0xb2, 0x7f, 0x60, 0x4c, 0xfe, 0x0a, 0x09, 0x76, 0x4d, 0xe6, 0x1e, 0x80, 0xf5, 0x8d, 0xc1, 0x72, 0x3f, 0x50, 0xad, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x21, 0x02, 0x7c, 0x3a, 0x97, 0x66, 0x5b, 0xf2, 0x83, 0xa1, 0x02, 0xa5, 0x87, 0xa6, 0x2a, 0x30, 0xa0, 0xc1, 0x02, 0xd4, 0xd3, 0xb1, 0x41, 0x01, 0x5e, 0x2c, 0xae, 0x6f, 0x64, 0xe2, 0x54, 0x31, 0x13, 0xe5, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // MARK: - Inverted versions of tx_valid CODESEPARATOR IF block tests

    // CODESEPARATOR in an unexecuted IF block does not change what is hashed
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xa9, 0x55, 0x03, 0x2f, 0x4d, 0x6b, 0x0c, 0x9b, 0xfe, 0x8c, 0xad, 0x8f, 0x00, 0xa8, 0x93, 0x37, 0x90, 0xb9, 0xc1, 0xdc, 0x28, 0xc8, 0x2e, 0x0f, 0x48, 0xe7, 0x5b, 0x35, 0xda, 0x0e, 0x49, 0x44],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .if,
                    .codeSeparator,
                    .endIf,
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .checkSigVerify,
                    .codeSeparator,
                    .constant(1)
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x44, 0x49, 0x0e, 0xda, 0x35, 0x5b, 0xe7, 0x48, 0x0f, 0x2e, 0xc8, 0x28, 0xdc, 0xc1, 0xb9, 0x90, 0x37, 0x93, 0xa8, 0x00, 0x8f, 0xad, 0x8c, 0xfe, 0x9b, 0x0c, 0x6b, 0x4d, 0x2f, 0x03, 0x55, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x48, 0x30, 0x45, 0x02, 0x20, 0x7a, 0x69, 0x74, 0xa7, 0x7c, 0x59, 0x1f, 0xa1, 0x3d, 0xff, 0x60, 0xca, 0xbb, 0xb8, 0x5a, 0x0d, 0xe9, 0xe0, 0x25, 0xc0, 0x9c, 0x65, 0xa4, 0xb2, 0x28, 0x5e, 0x47, 0xce, 0x8e, 0x22, 0xf7, 0x61, 0x02, 0x21, 0x00, 0xf0, 0xef, 0xaa, 0xc9, 0xff, 0x8a, 0xc3, 0x6b, 0x10, 0x72, 0x1e, 0x0a, 0xae, 0x1f, 0xb9, 0x75, 0xc9, 0x05, 0x00, 0xb5, 0x0c, 0x56, 0xe8, 0xa0, 0xcc, 0x52, 0xb0, 0x40, 0x3f, 0x04, 0x25, 0xdd, 0x01, 0x51, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // As above, with the IF block executed
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xa9, 0x55, 0x03, 0x2f, 0x4d, 0x6b, 0x0c, 0x9b, 0xfe, 0x8c, 0xad, 0x8f, 0x00, 0xa8, 0x93, 0x37, 0x90, 0xb9, 0xc1, 0xdc, 0x28, 0xc8, 0x2e, 0x0f, 0x48, 0xe7, 0x5b, 0x35, 0xda, 0x0e, 0x49, 0x44],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .if,
                    .codeSeparator,
                    .endIf,
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .checkSigVerify,
                    .codeSeparator,
                    .constant(1)
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x44, 0x49, 0x0e, 0xda, 0x35, 0x5b, 0xe7, 0x48, 0x0f, 0x2e, 0xc8, 0x28, 0xdc, 0xc1, 0xb9, 0x90, 0x37, 0x93, 0xa8, 0x00, 0x8f, 0xad, 0x8c, 0xfe, 0x9b, 0x0c, 0x6b, 0x4d, 0x2f, 0x03, 0x55, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xfa, 0x4a, 0x74, 0xba, 0x9f, 0xd5, 0x9c, 0x59, 0xf4, 0x6c, 0x39, 0x60, 0xcf, 0x90, 0xcb, 0xe0, 0xd2, 0xb7, 0x43, 0xc4, 0x71, 0xd2, 0x4a, 0x3d, 0x5d, 0x6d, 0xb6, 0x00, 0x2a, 0xf5, 0xee, 0xbb, 0x02, 0x20, 0x4d, 0x70, 0xec, 0x49, 0x0f, 0xd0, 0xf7, 0x05, 0x5a, 0x7c, 0x45, 0xf8, 0x65, 0x14, 0x33, 0x6e, 0x3a, 0x7f, 0x03, 0x50, 0x3d, 0xac, 0xec, 0xab, 0xb2, 0x47, 0xfc, 0x23, 0xf1, 0x5c, 0x83, 0x51, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // MARK: - CHECKLOCKTIMEVERIFY tests

    // By-height locks, with argument just beyond tx nLockTime
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x1d, 0xcd, 0x64, 0xff]).reversed())), // 499_999_999
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x64, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x1d, 0xcd, 0x65, 0x01]).reversed())), // 500_000_001
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x00, 0xff, 0xff, 0xff, 0xff]).reversed())), // 4_294_967_295
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Argument missing
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .checkLockTimeVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Argument negative with by-blockheight nLockTime=0
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .oneNegate,
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Argument negative with by-blocktime nLockTime=500,000,000
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .oneNegate,
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x51, 0x94, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Input locked
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero,
                    .checkLockTimeVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x51, 0xb1, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // Another input being unlocked isn't sufficient; the CHECKLOCKTIMEVERIFY-using input must be unlocked
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero,
                    .checkLockTimeVerify,
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00],
                outputIndex: 1,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),


    // Argument/tx height/time mismatch, both versions
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero,
                    .checkLockTimeVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x51, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d],
        verifyFlags: "NONE"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x1d, 0xcd, 0x64, 0xff]).reversed())), // 499_999_999
                    .checkLockTimeVerify,
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x1d, 0xcd, 0x65, 0x00]).reversed())), // 500_000_000
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x1d, 0xcd, 0x65, 0x00]).reversed())), // 500_000_000
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x64, 0xcd, 0x1d],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Argument 2^32 with nLockTime=2^32-1
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x10, 0x00, 0x00, 0x00, 0x00]).reversed())),
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Same, but with nLockTime=2^31-1
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x00, 0x80, 0x00, 0x00, 0x00]).reversed())), // 2_147_483_648
                    .checkLockTimeVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x7f],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x00, 0x00, 0x00, 0x00, 0x00, 0x00])),
                    .checkLockTimeVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Failure due to failing CHECKLOCKTIMEVERIFY in scriptSig
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x51, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKLOCKTIMEVERIFY"
    ),

    // Failure due to failing CHECKLOCKTIMEVERIFY in redeemScript
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0xc5, 0xb9, 0x30, 0x64, 0x15, 0x9b, 0x3b, 0x2d, 0x6a, 0xb5, 0x06, 0xa4, 0x1b, 0x1f, 0x50, 0x46, 0x37, 0x71, 0xb9, 0x88])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x51, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,CHECKLOCKTIMEVERIFY"
    ),

    // A transaction with a non-standard DER signature.
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xb1, 0xdb, 0xc8, 0x16, 0x96, 0xc8, 0xa9, 0xc0, 0xfc, 0xcd, 0x06, 0x93, 0xab, 0x66, 0xd7, 0xc3, 0x68, 0xdb, 0xc3, 0x8c, 0x0d, 0xef, 0x4e, 0x80, 0x06, 0x85, 0x56, 0x0d, 0xdd, 0x1b, 0x21, 0x32],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0x4b, 0x3b, 0xd7, 0xeb, 0xa3, 0xbc, 0x02, 0x84, 0xfd, 0x30, 0x07, 0xbe, 0x7f, 0x3b, 0xe2, 0x75, 0xe9, 0x4f, 0x58, 0x26])),
                    .equalVerify,
                    .checkSig
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x32, 0x21, 0x1b, 0xdd, 0x0d, 0x56, 0x85, 0x06, 0x80, 0x4e, 0xef, 0x0d, 0x8c, 0xc3, 0xdb, 0x68, 0xc3, 0xd7, 0x66, 0xab, 0x93, 0x06, 0xcd, 0xfc, 0xc0, 0xa9, 0xc8, 0x96, 0x16, 0xc8, 0xdb, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x49, 0x30, 0x45, 0x02, 0x21, 0x00, 0xc7, 0xbb, 0x0f, 0xae, 0xa0, 0x52, 0x2e, 0x74, 0xff, 0x22, 0x0c, 0x20, 0xc0, 0x22, 0xd2, 0xcb, 0x60, 0x33, 0xf8, 0xd1, 0x67, 0xfb, 0x89, 0xe7, 0x5a, 0x50, 0xe2, 0x37, 0xa3, 0x5f, 0xd6, 0xd2, 0x02, 0x20, 0x30, 0x64, 0x71, 0x34, 0x91, 0xb1, 0xf8, 0xad, 0x5f, 0x79, 0xe6, 0x23, 0xd0, 0x21, 0x9a, 0xd3, 0x25, 0x10, 0xbf, 0xaa, 0x10, 0x09, 0xab, 0x30, 0xcb, 0xee, 0x77, 0xb5, 0x93, 0x17, 0xd6, 0xe3, 0x00, 0x01, 0x21, 0x02, 0x37, 0xaf, 0x13, 0xeb, 0x2d, 0x84, 0xe4, 0x54, 0x5a, 0xf2, 0x87, 0xb9, 0x19, 0xc2, 0x28, 0x20, 0x19, 0xc9, 0x69, 0x1c, 0xc5, 0x09, 0xe7, 0x8e, 0x19, 0x6a, 0x9d, 0x82, 0x74, 0xed, 0x1b, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xf1, 0xb3, 0xed, 0x2e, 0xda, 0x9a, 0x2e, 0xbe, 0x5a, 0x93, 0x74, 0xf6, 0x92, 0x87, 0x7c, 0xdf, 0x87, 0xc0, 0xf9, 0x5b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "DERSIG"
    ),

    // MARK: - CHECKSEQUENCEVERIFY tests

    // By-height locks, with argument just beyond txin.nSequence
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1),
                    .checkSequenceVerify,
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0xff, 0xff]).reversed())), // 4_259_839
                    .checkSequenceVerify,
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // By-time locks, with argument just beyond txin.nSequence (but within numerical boundaries)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0x00, 0x01]).reversed())), // 4_194_305
                    .checkSequenceVerify,
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0xff, 0xff]).reversed())), // 4_259_839
                    .checkSequenceVerify,
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Argument missing
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .checkSequenceVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Argument negative with by-blockheight txin.nSequence=0
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .oneNegate,
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Argument negative with by-blocktime txin.nSequence=CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .oneNegate,
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Argument/tx height/time mismatch, both versions
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero,
                    .checkSequenceVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x00, 0xff, 0xff]).reversed())), // 65_535
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0x00, 0x00]).reversed())), // 4_194_304
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0xff, 0xff]).reversed())), // 4_259_839
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x00, 0x00, 0x00, 0x00, 0x00, 0x00])),
                    .checkSequenceVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Failure due to failing CHECKSEQUENCEVERIFY in scriptSig
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x51, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // Failure due to failing CHECKSEQUENCEVERIFY in redeemScript
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x7c, 0x17, 0xaf, 0xf5, 0x32, 0xf2, 0x2b, 0xeb, 0x54, 0x06, 0x99, 0x42, 0xf9, 0xbf, 0x56, 0x7a, 0x66, 0x13, 0x3e, 0xaf])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x51, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,CHECKSEQUENCEVERIFY"
    ),

    // Failure due to insufficient tx.nVersion (<2)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .zero,
                    .checkSequenceVerify,
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init(Data([0x40, 0x00, 0x00]).reversed())), // 4_194_304
                    .checkSequenceVerify
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CHECKSEQUENCEVERIFY"
    ),

    // MARK: - Segwit tests

    // Unknown witness program version (with DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 2000,
                scriptOperations: [
                    .constant(16),
                    .pushBytes(.init([0x4c, 0x9c, 0x3d, 0xfa, 0xc4, 0x20, 0x7d, 0x5d, 0x8c, 0xb8, 0x9d, 0xf5, 0x72, 0x2c, 0xb3, 0xd7, 0x12, 0x38, 0x5e, 0x3f]))
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 2,
                amount: 3000,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xd0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xb8, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x02, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa3, 0xce, 0xc6, 0x9b, 0x52, 0xcb, 0xa2, 0xd2, 0xde, 0x62, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x60, 0x61, 0x84, 0xea, 0x55, 0x47, 0x6c, 0x0f, 0x81, 0x89, 0xfd, 0xa2, 0x31, 0xbc, 0x9c, 0xbb, 0x02, 0x20, 0x03, 0x18, 0x1a, 0xd5, 0x97, 0xf7, 0xc3, 0x80, 0xa7, 0xd1, 0xc7, 0x40, 0x28, 0x6b, 0x1d, 0x02, 0x2b, 0x8b, 0x04, 0xde, 0xd0, 0x28, 0xb8, 0x33, 0x28, 0x2e, 0x05, 0x5e, 0x03, 0xb8, 0xef, 0xef, 0x81, 0x21, 0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS,DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM"
    ),

    // Unknown length for witness program v0
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x4c, 0x9c, 0x3d, 0xfa, 0xc4, 0x20, 0x7d, 0x5d, 0x8c, 0xb8, 0x9d, 0xf5, 0x72, 0x2c, 0xb3, 0xd7, 0x12, 0x38, 0x5e, 0x3f, 0xff]))
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 2,
                amount: 3000,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x04, 0xb6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x9e, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x86, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x02, 0x47, 0x30, 0x44, 0x02, 0x20, 0x22, 0xfc, 0xeb, 0x54, 0xf6, 0x2f, 0x8f, 0xee, 0xa7, 0x7f, 0xaa, 0xc7, 0x08, 0x3c, 0x3b, 0x56, 0xc4, 0x67, 0x6a, 0x78, 0xf9, 0x37, 0x45, 0xad, 0xc8, 0xa3, 0x58, 0x00, 0xbc, 0x36, 0xad, 0xfa, 0x02, 0x20, 0x26, 0x92, 0x7d, 0xf9, 0xab, 0xcf, 0x0a, 0x87, 0x77, 0x82, 0x9b, 0xcf, 0xcc, 0xe3, 0xff, 0x0a, 0x38, 0x5f, 0xa5, 0x4c, 0x3f, 0x9d, 0xf5, 0x77, 0x40, 0x5e, 0x3e, 0xf2, 0x4e, 0xe5, 0x64, 0x79, 0x02, 0x21, 0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness with SigHash Single|AnyoneCanPay (same index output value changed)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x4c, 0x9c, 0x3d, 0xfa, 0xc4, 0x20, 0x7d, 0x5d, 0x8c, 0xb8, 0x9d, 0xf5, 0x72, 0x2c, 0xb3, 0xd7, 0x12, 0x38, 0x5e, 0x3f]))
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 2,
                amount: 3000,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x6c, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xb8, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x02, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0x92, 0xf4, 0x77, 0x7a, 0x0f, 0x17, 0xbf, 0x5a, 0xeb, 0x8a, 0xe7, 0x68, 0xde, 0xc5, 0xf2, 0xc1, 0x4f, 0xea, 0xbf, 0x9d, 0x1f, 0xe2, 0xc8, 0x9c, 0x78, 0xdf, 0xed, 0x0f, 0x13, 0xfd, 0xb8, 0x69, 0x02, 0x20, 0x6d, 0xa9, 0x0a, 0x86, 0x04, 0x2e, 0x25, 0x2b, 0xcd, 0x1e, 0x80, 0xa1, 0x68, 0xc7, 0x19, 0xe4, 0xa1, 0xdd, 0xcc, 0x3c, 0xeb, 0xea, 0x24, 0xb9, 0x81, 0x2c, 0x54, 0x53, 0xc7, 0x91, 0x07, 0xe9, 0x83, 0x21, 0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness with SigHash None|AnyoneCanPay (input sequence changed)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x4c, 0x9c, 0x3d, 0xfa, 0xc4, 0x20, 0x7d, 0x5d, 0x8c, 0xb8, 0x9d, 0xf5, 0x72, 0x2c, 0xb3, 0xd7, 0x12, 0x38, 0x5e, 0x3f]))
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 2,
                amount: 3000,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xd0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xb8, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x02, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0x91, 0xb3, 0x22, 0x74, 0x29, 0x5c, 0x2a, 0x3f, 0xa0, 0x2f, 0x5b, 0xce, 0x92, 0xfb, 0x27, 0x89, 0xe3, 0xfc, 0x6e, 0xa9, 0x47, 0xfb, 0xe1, 0xa7, 0x6e, 0x52, 0xea, 0x3f, 0x4e, 0xf2, 0x38, 0x1a, 0x02, 0x20, 0x79, 0xad, 0x72, 0xae, 0xfa, 0x38, 0x37, 0xa2, 0xe0, 0xc0, 0x33, 0xa8, 0x65, 0x2a, 0x59, 0x73, 0x1d, 0xa0, 0x5f, 0xa4, 0xa8, 0x13, 0xf4, 0xfc, 0x48, 0xe8, 0x7c, 0x07, 0x50, 0x37, 0x25, 0x6b, 0x82, 0x21, 0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness with SigHash All|AnyoneCanPay (third output value changed)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(1)
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x4c, 0x9c, 0x3d, 0xfa, 0xc4, 0x20, 0x7d, 0x5d, 0x8c, 0xb8, 0x9d, 0xf5, 0x72, 0x2c, 0xb3, 0xd7, 0x12, 0x38, 0x5e, 0x3f]))
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 2,
                amount: 3000,
                scriptOperations: [
                    .constant(1)
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xd0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x54, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x02, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xa3, 0xce, 0xc6, 0x9b, 0x52, 0xcb, 0xa2, 0xd2, 0xde, 0x62, 0x3e, 0xee, 0xf8, 0x9e, 0x0b, 0xa1, 0x60, 0x61, 0x84, 0xea, 0x55, 0x47, 0x6c, 0x0f, 0x81, 0x89, 0xfd, 0xa2, 0x31, 0xbc, 0x9c, 0xbb, 0x02, 0x20, 0x03, 0x18, 0x1a, 0xd5, 0x97, 0xf7, 0xc3, 0x80, 0xa7, 0xd1, 0xc7, 0x40, 0x28, 0x6b, 0x1d, 0x02, 0x2b, 0x8b, 0x04, 0xde, 0xd0, 0x28, 0xb8, 0x33, 0x28, 0x2e, 0x05, 0x5e, 0x03, 0xb8, 0xef, 0xef, 0x81, 0x21, 0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness with a push of 521 bytes
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x33, 0x19, 0x8a, 0x9b, 0xfe, 0xf6, 0x74, 0xeb, 0xdd, 0xb9, 0xff, 0xaa, 0x52, 0x92, 0x80, 0x17, 0xb8, 0x47, 0x27, 0x91, 0xe5, 0x4c, 0x60, 0x9c, 0xb9, 0x5f, 0x27, 0x8a, 0xc6, 0xb1, 0xe3, 0x49]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x02, 0xfd, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x75, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness with unknown version which push false on the stack should be invalid (even without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 2000,
                scriptOperations: [
                    .constant(16),
                    .pushBytes(.init([0x00, 0x00]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // Witness program should leave clean stack
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x2f, 0x04, 0xa3, 0xaa, 0x05, 0x1f, 0x1f, 0x60, 0xd6, 0x95, 0xf6, 0xc4, 0x4c, 0x0c, 0x3d, 0x38, 0x39, 0x73, 0xdf, 0xd4, 0x46, 0xac, 0xe8, 0x96, 0x26, 0x64, 0xa7, 0x6b, 0xb1, 0x0e, 0x31, 0xa8]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x01, 0x02, 0x51, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Witness v0 with a push of 2 bytes
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 2000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x00, 0x01]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x01, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Unknown witness version with non empty scriptSig
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 2000,
                scriptOperations: [
                    .constant(16),
                    .pushBytes(.init([0x00, 0x01]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // Non witness Single|AnyoneCanPay hash input's position (permutation)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71])),
                    .checkSig
                ]
            ),
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 1,
                amount: 1001,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x59, 0x6d, 0x34, 0x51, 0x02, 0x5c, 0x19, 0xdb, 0xbd, 0xeb, 0x93, 0x2d, 0x6b, 0xf8, 0xbf, 0xb4, 0xad, 0x49, 0x9b, 0x95, 0xb6, 0xf8, 0x8d, 0xb8, 0x89, 0x9e, 0xfa, 0xc1, 0x02, 0xe5, 0xfc, 0x71])),
                    .checkSig
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x49, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xac, 0xb9, 0x6c, 0xfd, 0xbd, 0xa6, 0xdc, 0x94, 0xb4, 0x89, 0xfd, 0x06, 0xf2, 0xd7, 0x20, 0x98, 0x3b, 0x5f, 0x35, 0x0e, 0x31, 0xba, 0x90, 0x6c, 0xdb, 0xd8, 0x00, 0x77, 0x3e, 0x80, 0xb2, 0x1c, 0x02, 0x20, 0x0d, 0x74, 0xea, 0x5b, 0xdf, 0x11, 0x42, 0x12, 0xb4, 0xbb, 0xe9, 0xed, 0x82, 0xc3, 0x6d, 0x2e, 0x36, 0x9e, 0x30, 0x2d, 0xff, 0x57, 0xcb, 0x60, 0xd0, 0x1c, 0x42, 0x8f, 0x0b, 0xd3, 0xda, 0xab, 0x83, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x47, 0x30, 0x44, 0x02, 0x20, 0x2a, 0x0b, 0x4b, 0x12, 0x94, 0xd7, 0x05, 0x40, 0x23, 0x5a, 0xe0, 0x33, 0xd7, 0x8e, 0x64, 0xb4, 0x89, 0x7e, 0xc8, 0x59, 0xc7, 0xb6, 0xf1, 0xb2, 0xb1, 0xd8, 0xa0, 0x2e, 0x1d, 0x46, 0x00, 0x67, 0x02, 0x20, 0x14, 0x45, 0xe7, 0x56, 0xd2, 0x25, 0x4b, 0x0f, 0x1d, 0xfd, 0xa9, 0xab, 0x8e, 0x1e, 0x1b, 0xc2, 0x6d, 0xf9, 0x66, 0x80, 0x77, 0x40, 0x32, 0x04, 0xf3, 0x2d, 0x16, 0xa4, 0x9a, 0x36, 0xeb, 0x69, 0x83, 0xff, 0xff, 0xff, 0xff, 0x02, 0xe9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "NONE"
    ),

    // P2WSH with a redeem representing a witness scriptPubKey should fail due to too many stack items
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x34, 0xb6, 0xc3, 0x99, 0x09, 0x3e, 0x06, 0xcf, 0x9f, 0x0f, 0x7f, 0x66, 0x0a, 0x1a, 0xbc, 0xfe, 0x78, 0xfc, 0xf7, 0xb5, 0x76, 0xf4, 0x39, 0x93, 0x20, 0x8e, 0xdd, 0x95, 0x18, 0xa0, 0xae, 0x9b]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x01, 0x04, 0x51, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // P2WSH with an empty redeem should fail due to empty stack
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x3d, 0x4d, 0xa2, 0x1b, 0x04, 0xa6, 0x7a, 0x54, 0xc8, 0xa5, 0x8d, 0xf1, 0xc5, 0x3a, 0x05, 0x34, 0xb0, 0xa7, 0xf0, 0x86, 0x4f, 0xb3, 0xd1, 0x9a, 0xbd, 0x43, 0xb8, 0xf6, 0x93, 0x4e, 0x78, 0x5f],
                outputIndex: 0,
                amount: 1337,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55]))
                ]
            )
        ],
        serializedTransaction: [0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x5f, 0x78, 0x4e, 0x93, 0xf6, 0xb8, 0x43, 0xbd, 0x9a, 0xd1, 0xb3, 0x4f, 0x86, 0xf0, 0xa7, 0xb0, 0x34, 0x05, 0x3a, 0xc5, 0xf1, 0x8d, 0xa5, 0xc8, 0x54, 0x7a, 0xa6, 0x04, 0x1b, 0xa2, 0x4d, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x39, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x20, 0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // 33 bytes push should be considered a witness scriptPubKey
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00],
                outputIndex: 0,
                amount: 1000,
                scriptOperations: [
                    .constant(16),
                    .pushBytes(.init([0xff, 0x25, 0x42, 0x92, 0x51, 0xb5, 0xa8, 0x4f, 0x45, 0x22, 0x30, 0xa3, 0xc7, 0x5f, 0xd8, 0x86, 0xb7, 0xfc, 0x5a, 0x78, 0x65, 0xce, 0x4a, 0x7b, 0xb7, 0xa9, 0xd7, 0xc5, 0xbe, 0x6d, 0xa3, 0xdb, 0xff]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS,DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM"
    ),

    // MARK: - FindAndDelete tests
    // This is a test of FindAndDelete. The first tx is a spend of normal scriptPubKey and the second tx is a spend of bare P2WSH.
    // The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>.
    // The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>, where the pubkey is obtained through key recovery with sig and the wrong sighash.
    // This is to show that FindAndDelete is applied only to non-segwit scripts.
    // To show that the tests are 'correctly wrong', they should pass by modifying OP_CHECKSIG under `interpreter.cpp` by replacing (sigversion == SigVersion::BASE) with (sigversion != SigVersion::BASE)

    // Non-segwit: wrong sighash (without FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xf1, 0x87, 0x83, 0xac, 0xe1, 0x38, 0xab, 0xac, 0x5d, 0x3a, 0x7a, 0x5c, 0xf0, 0x8e, 0x88, 0xfe, 0x69, 0x12, 0xf2, 0x67, 0xef, 0x93, 0x64, 0x52, 0xe0, 0xc2, 0x7d, 0x09, 0x06, 0x21, 0xc1, 0x69],
                outputIndex: 7000,
                amount: 200000,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x0c, 0x74, 0x64, 0x89, 0xe2, 0xd8, 0x3c, 0xdb, 0xb5, 0xb9, 0x0b, 0x43, 0x27, 0x73, 0x34, 0x2b, 0xa8, 0x09, 0xc1, 0x34])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x69, 0xc1, 0x21, 0x06, 0x09, 0x7d, 0xc2, 0xe0, 0x52, 0x64, 0x93, 0xef, 0x67, 0xf2, 0x12, 0x69, 0xfe, 0x88, 0x8e, 0xf0, 0x5c, 0x7a, 0x3a, 0x5d, 0xac, 0xab, 0x38, 0xe1, 0xac, 0x83, 0x87, 0xf1, 0x58, 0x1b, 0x00, 0x00, 0xb6, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x21, 0x03, 0xb1, 0x2a, 0x1e, 0xc8, 0x42, 0x8f, 0xc7, 0x41, 0x66, 0x92, 0x63, 0x18, 0xc1, 0x5e, 0x17, 0x40, 0x8f, 0xea, 0x82, 0xdb, 0xb1, 0x57, 0x57, 0x5e, 0x16, 0xa8, 0xc3, 0x65, 0xf5, 0x46, 0x24, 0x8f, 0x4a, 0xad, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH"
    ),

    // BIP143: wrong sighash (with FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xf1, 0x87, 0x83, 0xac, 0xe1, 0x38, 0xab, 0xac, 0x5d, 0x3a, 0x7a, 0x5c, 0xf0, 0x8e, 0x88, 0xfe, 0x69, 0x12, 0xf2, 0x67, 0xef, 0x93, 0x64, 0x52, 0xe0, 0xc2, 0x7d, 0x09, 0x06, 0x21, 0xc1, 0x69],
                outputIndex: 7500,
                amount: 200000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x9e, 0x1b, 0xe0, 0x75, 0x58, 0xea, 0x5c, 0xc8, 0xe0, 0x2e, 0xd1, 0xd8, 0x0c, 0x09, 0x11, 0x04, 0x8a, 0xfa, 0xd9, 0x49, 0xaf, 0xfa, 0x36, 0xd5, 0xc3, 0x95, 0x1e, 0x31, 0x59, 0xdb, 0xea, 0x19]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x69, 0xc1, 0x21, 0x06, 0x09, 0x7d, 0xc2, 0xe0, 0x52, 0x64, 0x93, 0xef, 0x67, 0xf2, 0x12, 0x69, 0xfe, 0x88, 0x8e, 0xf0, 0x5c, 0x7a, 0x3a, 0x5d, 0xac, 0xab, 0x38, 0xe1, 0xac, 0x83, 0x87, 0xf1, 0x4c, 0x1d, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x21, 0x02, 0xa9, 0xd7, 0xed, 0x6e, 0x16, 0x1f, 0x0e, 0x25, 0x5c, 0x10, 0xbb, 0xfc, 0xca, 0x01, 0x28, 0xa9, 0xe2, 0x03, 0x5c, 0x2c, 0x8d, 0xa5, 0x88, 0x99, 0xc5, 0x4d, 0x22, 0xd3, 0xa3, 0x1a, 0xfd, 0xef, 0x4a, 0xad, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // MARK: - This is multisig version of the FindAndDelete tests
    // Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP 52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175
    // Signature is 0 <sig1> <sig2> 2 <key1> <key2>
    // Should pass by replacing (sigversion == SigVersion::BASE) with (sigversion != SigVersion::BASE) under OP_CHECKMULTISIG

    // Non-segwit: wrong sighash (without FindAndDelete) = 4bc6a53e8e16ef508c19e38bba08831daba85228b0211f323d4cb0999cf2a5e8
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x96, 0x28, 0x66, 0x7a, 0xd4, 0x82, 0x19, 0xa1, 0x69, 0xb4, 0x1b, 0x02, 0x08, 0x00, 0x16, 0x22, 0x87, 0xd2, 0xc0, 0xf7, 0x13, 0xc0, 0x41, 0x57, 0xe9, 0x5c, 0x48, 0x4a, 0x8d, 0xcb, 0x75, 0x92],
                outputIndex: 7000,
                amount: 200000,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0x57, 0x48, 0x40, 0x7f, 0x5c, 0xa5, 0xcd, 0xca, 0x53, 0xba, 0x30, 0xb7, 0x90, 0x40, 0x26, 0x07, 0x70, 0xc9, 0xee, 0x1b])),
                    .equal
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x92, 0x75, 0xcb, 0x8d, 0x4a, 0x48, 0x5c, 0xe9, 0x57, 0x41, 0xc0, 0x13, 0xf7, 0xc0, 0xd2, 0x87, 0x22, 0x16, 0x00, 0x08, 0x02, 0x1b, 0xb4, 0x69, 0xa1, 0x19, 0x82, 0xd4, 0x7a, 0x66, 0x28, 0x96, 0x58, 0x1b, 0x00, 0x00, 0xfd, 0x6f, 0x01, 0x00, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x52, 0x86, 0xf7, 0x26, 0x69, 0x0b, 0x2e, 0x9b, 0x02, 0x07, 0xf0, 0x34, 0x57, 0x11, 0xe6, 0x3f, 0xa7, 0x01, 0x20, 0x45, 0xb9, 0xeb, 0x0f, 0x19, 0xc2, 0x45, 0x8c, 0xe1, 0xdb, 0x90, 0xcf, 0x43, 0x02, 0x21, 0x00, 0xe8, 0x9f, 0x17, 0xf8, 0x6a, 0xbc, 0x5b, 0x14, 0x9e, 0xba, 0x41, 0x15, 0xd4, 0xf1, 0x28, 0xbc, 0xf4, 0x5d, 0x77, 0xfb, 0x3e, 0xcd, 0xd3, 0x4f, 0x59, 0x40, 0x91, 0x34, 0x0c, 0x03, 0x95, 0x96, 0x01, 0x52, 0x21, 0x02, 0x3f, 0xd5, 0xdd, 0x42, 0xb4, 0x47, 0x69, 0xc5, 0x65, 0x3c, 0xbc, 0x59, 0x47, 0xff, 0x30, 0xab, 0x88, 0x71, 0xf2, 0x40, 0xad, 0x0c, 0x0e, 0x74, 0x32, 0xae, 0xfe, 0x84, 0xb5, 0xb4, 0xff, 0x34, 0x21, 0x03, 0x9d, 0x52, 0x17, 0x8d, 0xbd, 0xe3, 0x60, 0xb8, 0x3f, 0x19, 0xcf, 0x34, 0x8d, 0xeb, 0x04, 0xfa, 0x83, 0x60, 0xe1, 0xbf, 0x56, 0x34, 0x57, 0x7b, 0xe8, 0xe5, 0x0f, 0xaf, 0xc2, 0xb0, 0xe4, 0xef, 0x4c, 0x95, 0x52, 0xaf, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x52, 0x86, 0xf7, 0x26, 0x69, 0x0b, 0x2e, 0x9b, 0x02, 0x07, 0xf0, 0x34, 0x57, 0x11, 0xe6, 0x3f, 0xa7, 0x01, 0x20, 0x45, 0xb9, 0xeb, 0x0f, 0x19, 0xc2, 0x45, 0x8c, 0xe1, 0xdb, 0x90, 0xcf, 0x43, 0x02, 0x21, 0x00, 0xe8, 0x9f, 0x17, 0xf8, 0x6a, 0xbc, 0x5b, 0x14, 0x9e, 0xba, 0x41, 0x15, 0xd4, 0xf1, 0x28, 0xbc, 0xf4, 0x5d, 0x77, 0xfb, 0x3e, 0xcd, 0xd3, 0x4f, 0x59, 0x40, 0x91, 0x34, 0x0c, 0x03, 0x95, 0x96, 0x01, 0x75, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH"
    ),

    // BIP143: wrong sighash (with FindAndDelete) = 17c50ec2181ecdfdc85ca081174b248199ba81fff730794d4f69b8ec031f2dce
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x96, 0x28, 0x66, 0x7a, 0xd4, 0x82, 0x19, 0xa1, 0x69, 0xb4, 0x1b, 0x02, 0x08, 0x00, 0x16, 0x22, 0x87, 0xd2, 0xc0, 0xf7, 0x13, 0xc0, 0x41, 0x57, 0xe9, 0x5c, 0x48, 0x4a, 0x8d, 0xcb, 0x75, 0x92],
                outputIndex: 7500,
                amount: 200000,
                scriptOperations: [
                    .zero,
                    .pushBytes(.init([0x9b, 0x66, 0xc1, 0x5b, 0x4e, 0x0b, 0x4e, 0xb4, 0x9f, 0xa8, 0x77, 0x98, 0x2c, 0xaf, 0xde, 0xd2, 0x48, 0x59, 0xfe, 0x5b, 0x0e, 0x2d, 0xbf, 0xbe, 0x4f, 0x0d, 0xf1, 0xde, 0x77, 0x43, 0xfd, 0x52]))
                ]
            )
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x92, 0x75, 0xcb, 0x8d, 0x4a, 0x48, 0x5c, 0xe9, 0x57, 0x41, 0xc0, 0x13, 0xf7, 0xc0, 0xd2, 0x87, 0x22, 0x16, 0x00, 0x08, 0x02, 0x1b, 0xb4, 0x69, 0xa1, 0x19, 0x82, 0xd4, 0x7a, 0x66, 0x28, 0x96, 0x4c, 0x1d, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x52, 0x86, 0xf7, 0x26, 0x69, 0x0b, 0x2e, 0x9b, 0x02, 0x07, 0xf0, 0x34, 0x57, 0x11, 0xe6, 0x3f, 0xa7, 0x01, 0x20, 0x45, 0xb9, 0xeb, 0x0f, 0x19, 0xc2, 0x45, 0x8c, 0xe1, 0xdb, 0x90, 0xcf, 0x43, 0x02, 0x21, 0x00, 0xe8, 0x9f, 0x17, 0xf8, 0x6a, 0xbc, 0x5b, 0x14, 0x9e, 0xba, 0x41, 0x15, 0xd4, 0xf1, 0x28, 0xbc, 0xf4, 0x5d, 0x77, 0xfb, 0x3e, 0xcd, 0xd3, 0x4f, 0x59, 0x40, 0x91, 0x34, 0x0c, 0x03, 0x95, 0x96, 0x01, 0x01, 0x02, 0x21, 0x02, 0x3c, 0xb6, 0x05, 0x5f, 0x4b, 0x57, 0xa1, 0x58, 0x0c, 0x5a, 0x75, 0x3e, 0x19, 0x61, 0x0c, 0xaf, 0xae, 0xdf, 0x7e, 0x0f, 0xf3, 0x77, 0x73, 0x1c, 0x77, 0x83, 0x7f, 0xd6, 0x66, 0xea, 0xe1, 0x71, 0x21, 0x02, 0xc1, 0xb1, 0xdb, 0x30, 0x3a, 0xc2, 0x32, 0xff, 0xa8, 0xe5, 0xe7, 0xcc, 0x2c, 0xf5, 0xf9, 0x6c, 0x6e, 0x40, 0xd3, 0xe6, 0x91, 0x40, 0x61, 0x20, 0x4c, 0x05, 0x41, 0xcb, 0x20, 0x43, 0xa0, 0x96, 0x95, 0x52, 0xaf, 0x48, 0x30, 0x45, 0x02, 0x20, 0x48, 0x7f, 0xb3, 0x82, 0xc4, 0x97, 0x4d, 0xe3, 0xf7, 0xd8, 0x34, 0xc1, 0xb6, 0x17, 0xfe, 0x15, 0x86, 0x08, 0x28, 0xc7, 0xf9, 0x64, 0x54, 0x49, 0x0e, 0xdd, 0x6d, 0x89, 0x15, 0x56, 0xdc, 0xc9, 0x02, 0x21, 0x00, 0xba, 0xf9, 0x5f, 0xeb, 0x48, 0xf8, 0x45, 0xd5, 0xbf, 0xc9, 0x88, 0x2e, 0xb6, 0xae, 0xef, 0xa1, 0xbc, 0x37, 0x90, 0xe3, 0x9f, 0x59, 0xea, 0xa4, 0x6f, 0xf7, 0xf1, 0x5a, 0xe6, 0x26, 0xc5, 0x3e, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x52, 0x86, 0xf7, 0x26, 0x69, 0x0b, 0x2e, 0x9b, 0x02, 0x07, 0xf0, 0x34, 0x57, 0x11, 0xe6, 0x3f, 0xa7, 0x01, 0x20, 0x45, 0xb9, 0xeb, 0x0f, 0x19, 0xc2, 0x45, 0x8c, 0xe1, 0xdb, 0x90, 0xcf, 0x43, 0x02, 0x21, 0x00, 0xe8, 0x9f, 0x17, 0xf8, 0x6a, 0xbc, 0x5b, 0x14, 0x9e, 0xba, 0x41, 0x15, 0xd4, 0xf1, 0x28, 0xbc, 0xf4, 0x5d, 0x77, 0xfb, 0x3e, 0xcd, 0xd3, 0x4f, 0x59, 0x40, 0x91, 0x34, 0x0c, 0x03, 0x95, 0x96, 0x01, 0x75, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,WITNESS"
    ),

    // MARK: - SCRIPT_VERIFY_CONST_SCRIPTCODE tests
    // All transactions are copied from OP_CODESEPARATOR tests in tx_valid.json

    // Test that SignatureHash() removes OP_CODESEPARATOR with FindAndDelete()
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xbc, 0x7f, 0xd1, 0x32, 0xfc, 0xf8, 0x17, 0x91, 0x83, 0x34, 0x82, 0x2e, 0xe6, 0xd9, 0xbd, 0x95, 0xc8, 0x89, 0x09, 0x9c, 0x96, 0xe0, 0x7c, 0xa2, 0xc1, 0xeb, 0x2c, 0xc7, 0x0d, 0xb6, 0x32, 0x24],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .codeSeparator,
                    .pushBytes(.init([0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41])),
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x24, 0x32, 0xb6, 0x0d, 0xc7, 0x2c, 0xeb, 0xc1, 0xa2, 0x7c, 0xe0, 0x96, 0x9c, 0x09, 0x89, 0xc8, 0x95, 0xbd, 0xd9, 0xe6, 0x2e, 0x82, 0x34, 0x83, 0x91, 0x17, 0xf8, 0xfc, 0x32, 0xd1, 0x7f, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xa5, 0x76, 0xb5, 0x20, 0x51, 0x96, 0x2c, 0x25, 0xe6, 0x42, 0xc0, 0xfd, 0x3d, 0x77, 0xee, 0x6c, 0x92, 0x48, 0x70, 0x48, 0xe5, 0xd9, 0x08, 0x18, 0xbc, 0xf5, 0xb5, 0x1a, 0xba, 0xcc, 0xd7, 0x90, 0x02, 0x21, 0x00, 0x82, 0x04, 0xf8, 0xfb, 0x12, 0x1b, 0xe4, 0xec, 0x3b, 0x24, 0x48, 0x3b, 0x1f, 0x92, 0xd8, 0x9b, 0x1b, 0x05, 0x48, 0x51, 0x3a, 0x13, 0x4e, 0x34, 0x5c, 0x54, 0x42, 0xe8, 0x6e, 0x86, 0x17, 0xa5, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x83, 0xe1, 0x94, 0xf9, 0x0b, 0x6e, 0xf2, 0x1f, 0xa2, 0xe3, 0xa3, 0x65, 0xb6, 0x37, 0x94, 0xfb, 0x5d, 0xaa, 0x84, 0x4b, 0xdc, 0x9b, 0x25, 0xde, 0x30, 0x89, 0x9f, 0xcf, 0xe7, 0xb0, 0x10, 0x47],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .codeSeparator,
                    .codeSeparator,
                    .pushBytes(.init([0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41])),
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x47, 0x10, 0xb0, 0xe7, 0xcf, 0x9f, 0x89, 0x30, 0xde, 0x25, 0x9b, 0xdc, 0x4b, 0x84, 0xaa, 0x5d, 0xfb, 0x94, 0x37, 0xb6, 0x65, 0xa3, 0xe3, 0xa2, 0x1f, 0xf2, 0x6e, 0x0b, 0xf9, 0x94, 0xe1, 0x83, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xa1, 0x66, 0x12, 0x1a, 0x61, 0xb4, 0xee, 0xb1, 0x9d, 0x8f, 0x92, 0x2b, 0x97, 0x8f, 0xf6, 0xab, 0x58, 0xea, 0xd8, 0xa5, 0xa5, 0x55, 0x2b, 0xf9, 0xbe, 0x73, 0xdc, 0x9c, 0x15, 0x68, 0x73, 0xea, 0x02, 0x21, 0x00, 0x92, 0xad, 0x9b, 0xc4, 0x3e, 0xe6, 0x47, 0xda, 0x4f, 0x66, 0x52, 0xc3, 0x20, 0x80, 0x0d, 0xeb, 0xcf, 0x08, 0xec, 0x20, 0xa0, 0x94, 0xa0, 0xaa, 0xf0, 0x85, 0xf6, 0x3e, 0xcb, 0x37, 0xa1, 0x72, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // Hashed data starts at the CODESEPARATOR
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x32, 0x68, 0x82, 0xa7, 0xf2, 0x2b, 0x51, 0x91, 0xf1, 0xa0, 0xcc, 0x99, 0x62, 0xca, 0x4b, 0x87, 0x8c, 0xd9, 0x69, 0xcf, 0x3b, 0x3a, 0x70, 0x88, 0x7a, 0xec, 0xe4, 0xd8, 0x01, 0xa0, 0xba, 0x5e],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41])),
                    .codeSeparator,
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x5e, 0xba, 0xa0, 0x01, 0xd8, 0xe4, 0xec, 0x7a, 0x88, 0x70, 0x3a, 0x3b, 0xcf, 0x69, 0xd9, 0x8c, 0x87, 0x4b, 0xca, 0x62, 0x99, 0xcc, 0xa0, 0xf1, 0x91, 0x51, 0x2b, 0xf2, 0xa7, 0x82, 0x68, 0x32, 0x00, 0x00, 0x00, 0x00, 0x49, 0x48, 0x30, 0x45, 0x02, 0x20, 0x3b, 0xf7, 0x54, 0xd1, 0xc6, 0x73, 0x2f, 0xbf, 0x87, 0xc5, 0xdc, 0xd8, 0x12, 0x58, 0xae, 0xfd, 0x30, 0xf2, 0x06, 0x0d, 0x7b, 0xd8, 0xac, 0x4a, 0x56, 0x96, 0xf7, 0x92, 0x70, 0x91, 0xda, 0xd1, 0x02, 0x21, 0x00, 0xf5, 0xbc, 0xb7, 0x26, 0xc4, 0xcf, 0x5e, 0xd0, 0xed, 0x34, 0xcc, 0x13, 0xda, 0xde, 0xed, 0xf6, 0x28, 0xae, 0x10, 0x45, 0xb7, 0xcb, 0x34, 0x42, 0x1b, 0xc6, 0x0b, 0x89, 0xf4, 0xce, 0xca, 0xe7, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // But only if execution has reached it
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xa9, 0x55, 0x03, 0x2f, 0x4d, 0x6b, 0x0c, 0x9b, 0xfe, 0x8c, 0xad, 0x8f, 0x00, 0xa8, 0x93, 0x37, 0x90, 0xb9, 0xc1, 0xdc, 0x28, 0xc8, 0x2e, 0x0f, 0x48, 0xe7, 0x5b, 0x35, 0xda, 0x0e, 0x49, 0x44],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .pushBytes(.init([0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41])),
                    .checkSigVerify,
                    .codeSeparator,
                    .pushBytes(.init([0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41])),
                    .checkSigVerify,
                    .codeSeparator,
                    .constant(1)
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x44, 0x49, 0x0e, 0xda, 0x35, 0x5b, 0xe7, 0x48, 0x0f, 0x2e, 0xc8, 0x28, 0xdc, 0xc1, 0xb9, 0x90, 0x37, 0x93, 0xa8, 0x00, 0x8f, 0xad, 0x8c, 0xfe, 0x9b, 0x0c, 0x6b, 0x4d, 0x2f, 0x03, 0x55, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x92, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0x9c, 0x0a, 0x27, 0xf8, 0x86, 0xa1, 0xd8, 0xcb, 0x87, 0xf6, 0xf5, 0x95, 0xfb, 0xc3, 0x16, 0x3d, 0x28, 0xf7, 0xa8, 0x1e, 0xc3, 0xc4, 0xb2, 0x52, 0xee, 0x7f, 0x3a, 0xc7, 0x7f, 0xd1, 0x3f, 0xfa, 0x02, 0x20, 0x3c, 0xaa, 0x8d, 0xfa, 0x09, 0x71, 0x3c, 0x8c, 0x4d, 0x7e, 0xf5, 0x75, 0xc7, 0x5e, 0xd9, 0x78, 0x12, 0x07, 0x24, 0x05, 0xd9, 0x32, 0xbd, 0x11, 0xe6, 0xa1, 0x59, 0x3a, 0x98, 0xb6, 0x79, 0x37, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x1e, 0x38, 0x61, 0xef, 0x39, 0xa5, 0x26, 0x40, 0x6b, 0xad, 0x1e, 0x20, 0xec, 0xad, 0x06, 0xbe, 0x73, 0x75, 0xad, 0x40, 0xdd, 0xb5, 0x82, 0xc9, 0xbe, 0x42, 0xd2, 0x6c, 0x3a, 0x0d, 0x7b, 0x24, 0x02, 0x21, 0x00, 0x9d, 0x0a, 0x39, 0x85, 0xe9, 0x65, 0x22, 0xe5, 0x96, 0x35, 0xd1, 0x9c, 0xc4, 0x44, 0x85, 0x47, 0x47, 0x73, 0x96, 0xce, 0x0e, 0xf1, 0x7a, 0x58, 0xe7, 0xd7, 0x4c, 0x3e, 0xf4, 0x64, 0x29, 0x23, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // CODESEPARATOR in an unexecuted IF block is still invalid
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xa9, 0x55, 0x03, 0x2f, 0x4d, 0x6b, 0x0c, 0x9b, 0xfe, 0x8c, 0xad, 0x8f, 0x00, 0xa8, 0x93, 0x37, 0x90, 0xb9, 0xc1, 0xdc, 0x28, 0xc8, 0x2e, 0x0f, 0x48, 0xe7, 0x5b, 0x35, 0xda, 0x0e, 0x49, 0x44],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .if,
                    .codeSeparator,
                    .endIf,
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .checkSigVerify,
                    .codeSeparator,
                    .constant(1)
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x44, 0x49, 0x0e, 0xda, 0x35, 0x5b, 0xe7, 0x48, 0x0f, 0x2e, 0xc8, 0x28, 0xdc, 0xc1, 0xb9, 0x90, 0x37, 0x93, 0xa8, 0x00, 0x8f, 0xad, 0x8c, 0xfe, 0x9b, 0x0c, 0x6b, 0x4d, 0x2f, 0x03, 0x55, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x48, 0x30, 0x45, 0x02, 0x20, 0x7a, 0x69, 0x74, 0xa7, 0x7c, 0x59, 0x1f, 0xa1, 0x3d, 0xff, 0x60, 0xca, 0xbb, 0xb8, 0x5a, 0x0d, 0xe9, 0xe0, 0x25, 0xc0, 0x9c, 0x65, 0xa4, 0xb2, 0x28, 0x5e, 0x47, 0xce, 0x8e, 0x22, 0xf7, 0x61, 0x02, 0x21, 0x00, 0xf0, 0xef, 0xaa, 0xc9, 0xff, 0x8a, 0xc3, 0x6b, 0x10, 0x72, 0x1e, 0x0a, 0xae, 0x1f, 0xb9, 0x75, 0xc9, 0x05, 0x00, 0xb5, 0x0c, 0x56, 0xe8, 0xa0, 0xcc, 0x52, 0xb0, 0x40, 0x3f, 0x04, 0x25, 0xdd, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // CODESEPARATOR in an executed IF block is invalid
    // This tx is 100% equal to the one in valid, including flags (included vs excluded)
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xa9, 0x55, 0x03, 0x2f, 0x4d, 0x6b, 0x0c, 0x9b, 0xfe, 0x8c, 0xad, 0x8f, 0x00, 0xa8, 0x93, 0x37, 0x90, 0xb9, 0xc1, 0xdc, 0x28, 0xc8, 0x2e, 0x0f, 0x48, 0xe7, 0x5b, 0x35, 0xda, 0x0e, 0x49, 0x44],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .if,
                    .codeSeparator,
                    .endIf,
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .checkSigVerify,
                    .codeSeparator,
                    .constant(1)
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x44, 0x49, 0x0e, 0xda, 0x35, 0x5b, 0xe7, 0x48, 0x0f, 0x2e, 0xc8, 0x28, 0xdc, 0xc1, 0xb9, 0x90, 0x37, 0x93, 0xa8, 0x00, 0x8f, 0xad, 0x8c, 0xfe, 0x9b, 0x0c, 0x6b, 0x4d, 0x2f, 0x03, 0x55, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0xfa, 0x4a, 0x74, 0xba, 0x9f, 0xd5, 0x9c, 0x59, 0xf4, 0x6c, 0x39, 0x60, 0xcf, 0x90, 0xcb, 0xe0, 0xd2, 0xb7, 0x43, 0xc4, 0x71, 0xd2, 0x4a, 0x3d, 0x5d, 0x6d, 0xb6, 0x00, 0x2a, 0xf5, 0xee, 0xbb, 0x02, 0x20, 0x4d, 0x70, 0xec, 0x49, 0x0f, 0xd0, 0xf7, 0x05, 0x5a, 0x7c, 0x45, 0xf8, 0x65, 0x14, 0x33, 0x6e, 0x3a, 0x7f, 0x03, 0x50, 0x3d, 0xac, 0xec, 0xab, 0xb2, 0x47, 0xfc, 0x23, 0xf1, 0x5c, 0x83, 0x51, 0x01, 0x51, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // Using CHECKSIG with signatures in scriptSigs will trigger FindAndDelete, which is invalid
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xcc, 0xf7, 0xf4, 0x05, 0x3a, 0x02, 0xe6, 0x53, 0xc3, 0x6a, 0xc7, 0x5c, 0x89, 0x1b, 0x74, 0x96, 0xd0, 0xdc, 0x5c, 0xe5, 0x21, 0x4f, 0x6c, 0x91, 0x3d, 0x9c, 0xf8, 0xf1, 0x32, 0x9e, 0xbe, 0xe0],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xee, 0x5a, 0x6a, 0xa4, 0x0f, 0xac, 0xef, 0xb2, 0x65, 0x5a, 0xc2, 0x3c, 0x0c, 0x28, 0xc5, 0x7c, 0x65, 0xc4, 0x1f, 0x9b])),
                    .equalVerify,
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0xe0, 0xbe, 0x9e, 0x32, 0xf1, 0xf8, 0x9c, 0x3d, 0x91, 0x6c, 0x4f, 0x21, 0xe5, 0x5c, 0xdc, 0xd0, 0x96, 0x74, 0x1b, 0x89, 0x5c, 0xc7, 0x6a, 0xc3, 0x53, 0xe6, 0x02, 0x3a, 0x05, 0xf4, 0xf7, 0xcc, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x61, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0x86, 0xe5, 0xf7, 0x36, 0xa2, 0xc3, 0x62, 0x2e, 0xbb, 0x62, 0xbd, 0x9d, 0x93, 0xd8, 0xe5, 0xd7, 0x65, 0x08, 0xb9, 0x8b, 0xe9, 0x22, 0xb9, 0x71, 0x60, 0xed, 0xc3, 0xdc, 0xca, 0x6d, 0x8c, 0x47, 0x02, 0x21, 0x00, 0xb2, 0x3c, 0x31, 0x2a, 0xc2, 0x32, 0xa4, 0x47, 0x3f, 0x19, 0xd2, 0xae, 0xb9, 0x5a, 0xb7, 0xbd, 0xf2, 0xb6, 0x55, 0x18, 0x91, 0x1a, 0x0d, 0x72, 0xd5, 0x0e, 0x38, 0xb5, 0xdd, 0x31, 0xdc, 0x82, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xac, 0x47, 0x30, 0x44, 0x02, 0x20, 0x50, 0x8f, 0xa7, 0x61, 0x86, 0x5c, 0x8a, 0xbd, 0x81, 0x24, 0x4a, 0x16, 0x83, 0x92, 0x87, 0x6e, 0xe1, 0xd9, 0x4e, 0x8e, 0xd8, 0x38, 0x97, 0x06, 0x6b, 0x5e, 0x2d, 0xf2, 0x40, 0x0d, 0xad, 0x24, 0x02, 0x20, 0x43, 0xf5, 0xee, 0x75, 0x38, 0xe8, 0x7e, 0x9c, 0x6a, 0xef, 0x7e, 0xf5, 0x51, 0x33, 0xd3, 0xe5, 0x1d, 0xa7, 0xcc, 0x52, 0x28, 0x30, 0xa9, 0xc4, 0xd7, 0x36, 0x97, 0x7a, 0x76, 0xef, 0x75, 0x5c, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // OP_CODESEPARATOR in scriptSig is invalid
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x10, 0xc9, 0xf0, 0xef, 0xfe, 0x83, 0xe9, 0x7f, 0x80, 0xf0, 0x67, 0xde, 0x2b, 0x11, 0xc6, 0xa0, 0x0c, 0x30, 0x88, 0xa4, 0xbc, 0xe4, 0x2c, 0x5a, 0xe7, 0x61, 0x51, 0x9a, 0xf9, 0x30, 0x6f, 0x3c],
                outputIndex: 1,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xee, 0x5a, 0x6a, 0xa4, 0x0f, 0xac, 0xef, 0xb2, 0x65, 0x5a, 0xc2, 0x3c, 0x0c, 0x28, 0xc5, 0x7c, 0x65, 0xc4, 0x1f, 0x9b])),
                    .equalVerify,
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x3c, 0x6f, 0x30, 0xf9, 0x9a, 0x51, 0x61, 0xe7, 0x5a, 0x2c, 0xe4, 0xbc, 0xa4, 0x88, 0x30, 0x0c, 0xa0, 0xc6, 0x11, 0x2b, 0xde, 0x67, 0xf0, 0x80, 0x7f, 0xe9, 0x83, 0xfe, 0xef, 0xf0, 0xc9, 0x10, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x08, 0x64, 0x65, 0x61, 0x64, 0x62, 0x65, 0x65, 0x66, 0x75, 0xab, 0x61, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xce, 0x18, 0xd3, 0x84, 0x22, 0x1a, 0x73, 0x1c, 0x99, 0x39, 0x39, 0x01, 0x5e, 0x3d, 0x1b, 0xce, 0xba, 0xfb, 0x16, 0xe8, 0xc0, 0xb5, 0xb5, 0xd1, 0x40, 0x97, 0xec, 0x81, 0x77, 0xae, 0x6f, 0x28, 0x02, 0x21, 0x00, 0xbc, 0xab, 0x22, 0x7a, 0xf9, 0x0b, 0xab, 0x33, 0xc3, 0xfe, 0x0a, 0x9a, 0xbf, 0xee, 0x03, 0xba, 0x97, 0x6e, 0xe2, 0x5d, 0xc6, 0xce, 0x54, 0x25, 0x26, 0xe9, 0xb2, 0xe5, 0x6e, 0x14, 0xb7, 0xf1, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xac, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xc3, 0xb9, 0x3e, 0xdc, 0xc0, 0xfd, 0x62, 0x50, 0xeb, 0x32, 0xf2, 0xdd, 0x8a, 0x0b, 0xba, 0x17, 0x54, 0xb0, 0xf6, 0xc3, 0xbe, 0x8e, 0xd4, 0x10, 0x0e, 0xd5, 0x82, 0xf3, 0xdb, 0x73, 0xeb, 0xa2, 0x02, 0x21, 0x00, 0xbf, 0x75, 0xb5, 0xbd, 0x2e, 0xff, 0x4d, 0x6b, 0xf2, 0xbd, 0xa2, 0xe3, 0x4a, 0x40, 0xfc, 0xc0, 0x7d, 0x4a, 0xa3, 0xcf, 0x86, 0x2c, 0xea, 0xa7, 0x7b, 0x47, 0xb8, 0x1e, 0xff, 0x82, 0x9f, 0x9a, 0x01, 0xab, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // Again, FindAndDelete() in scriptSig
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x60, 0x56, 0xeb, 0xd5, 0x49, 0x00, 0x3b, 0x10, 0xcb, 0xbd, 0x91, 0x5c, 0xea, 0x0d, 0x82, 0x20, 0x9f, 0xe4, 0x0b, 0x86, 0x17, 0x10, 0x4b, 0xe9, 0x17, 0xa2, 0x6f, 0xa9, 0x2c, 0xbe, 0x3d, 0x6f],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xee, 0x5a, 0x6a, 0xa4, 0x0f, 0xac, 0xef, 0xb2, 0x65, 0x5a, 0xc2, 0x3c, 0x0c, 0x28, 0xc5, 0x7c, 0x65, 0xc4, 0x1f, 0x9b])),
                    .equalVerify,
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x6f, 0x3d, 0xbe, 0x2c, 0xa9, 0x6f, 0xa2, 0x17, 0xe9, 0x4b, 0x10, 0x17, 0x86, 0x0b, 0xe4, 0x9f, 0x20, 0x82, 0x0d, 0xea, 0x5c, 0x91, 0xbd, 0xcb, 0x10, 0x3b, 0x00, 0x49, 0xd5, 0xeb, 0x56, 0x60, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x1d, 0x01, 0x47, 0x30, 0x44, 0x02, 0x20, 0x39, 0x89, 0xac, 0x8f, 0x9a, 0xd3, 0x6b, 0x5d, 0x09, 0x19, 0xd9, 0x7f, 0xa0, 0xa7, 0xf7, 0x0c, 0x52, 0x72, 0xab, 0xee, 0x3b, 0x14, 0x47, 0x7d, 0xc6, 0x46, 0x28, 0x8a, 0x8b, 0x97, 0x6d, 0xf5, 0x02, 0x20, 0x27, 0xd1, 0x9d, 0xa8, 0x4a, 0x06, 0x6a, 0xf9, 0x05, 0x3a, 0xd3, 0xd1, 0xd7, 0x45, 0x9d, 0x17, 0x1b, 0x7e, 0x3a, 0x80, 0xbc, 0x6c, 0x4e, 0xf7, 0xa3, 0x30, 0x67, 0x7a, 0x6b, 0xe5, 0x48, 0x14, 0x01, 0x47, 0x30, 0x44, 0x02, 0x20, 0x39, 0x89, 0xac, 0x8f, 0x9a, 0xd3, 0x6b, 0x5d, 0x09, 0x19, 0xd9, 0x7f, 0xa0, 0xa7, 0xf7, 0x0c, 0x52, 0x72, 0xab, 0xee, 0x3b, 0x14, 0x47, 0x7d, 0xc6, 0x46, 0x28, 0x8a, 0x8b, 0x97, 0x6d, 0xf5, 0x02, 0x20, 0x27, 0xd1, 0x9d, 0xa8, 0x4a, 0x06, 0x6a, 0xf9, 0x05, 0x3a, 0xd3, 0xd1, 0xd7, 0x45, 0x9d, 0x17, 0x1b, 0x7e, 0x3a, 0x80, 0xbc, 0x6c, 0x4e, 0xf7, 0xa3, 0x30, 0x67, 0x7a, 0x6b, 0xe5, 0x48, 0x14, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xac, 0x47, 0x30, 0x44, 0x02, 0x20, 0x37, 0x57, 0xe9, 0x37, 0xba, 0x80, 0x7e, 0x4a, 0x5d, 0xa8, 0x53, 0x4c, 0x17, 0xf9, 0xd1, 0x21, 0x17, 0x60, 0x56, 0x40, 0x6a, 0x64, 0x65, 0x05, 0x4b, 0xdd, 0x26, 0x04, 0x57, 0x51, 0x5c, 0x1a, 0x02, 0x20, 0x0f, 0x02, 0xec, 0xcf, 0x1b, 0xec, 0x0f, 0x3a, 0x0d, 0x65, 0xdf, 0x37, 0x88, 0x91, 0x43, 0xc2, 0xe8, 0x8a, 0xb7, 0xac, 0xec, 0x61, 0xa7, 0xb6, 0xf5, 0xaa, 0x26, 0x41, 0x39, 0x14, 0x1a, 0x2b, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // That also includes ahead of the opcode being executed.
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0x5a, 0x6b, 0x00, 0x21, 0xa6, 0x04, 0x2a, 0x68, 0x6b, 0x6b, 0x94, 0xab, 0xc3, 0x6b, 0x38, 0x7b, 0xef, 0x91, 0x09, 0x84, 0x77, 0x74, 0xe8, 0xb1, 0xe5, 0x1e, 0xb8, 0xcc, 0x55, 0xc5, 0x39, 0x21],
                outputIndex: 1,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xee, 0x5a, 0x6a, 0xa4, 0x0f, 0xac, 0xef, 0xb2, 0x65, 0x5a, 0xc2, 0x3c, 0x0c, 0x28, 0xc5, 0x7c, 0x65, 0xc4, 0x1f, 0x9b])),
                    .equalVerify,
                    .checkSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x01, 0x21, 0x39, 0xc5, 0x55, 0xcc, 0xb8, 0x1e, 0xe5, 0xb1, 0xe8, 0x74, 0x77, 0x84, 0x09, 0x91, 0xef, 0x7b, 0x38, 0x6b, 0xc3, 0xab, 0x94, 0x6b, 0x6b, 0x68, 0x2a, 0x04, 0xa6, 0x21, 0x00, 0x6b, 0x5a, 0x01, 0x00, 0x00, 0x00, 0xfd, 0xb4, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x17, 0x23, 0xe6, 0x92, 0xe5, 0xf4, 0x09, 0xa7, 0x15, 0x1d, 0xb3, 0x86, 0x29, 0x1b, 0x63, 0x52, 0x4c, 0x5e, 0xb2, 0x03, 0x0d, 0xf6, 0x52, 0xb1, 0xf5, 0x30, 0x22, 0xfd, 0x82, 0x07, 0x34, 0x9f, 0x02, 0x21, 0x00, 0xb9, 0x0d, 0x9b, 0xbf, 0x2f, 0x33, 0x66, 0xce, 0x17, 0x6e, 0x5e, 0x78, 0x0a, 0x00, 0x43, 0x3d, 0xa6, 0x7d, 0x9e, 0x5c, 0x79, 0x31, 0x2c, 0x63, 0x88, 0x31, 0x2a, 0x29, 0x6a, 0x58, 0x00, 0x39, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x17, 0x23, 0xe6, 0x92, 0xe5, 0xf4, 0x09, 0xa7, 0x15, 0x1d, 0xb3, 0x86, 0x29, 0x1b, 0x63, 0x52, 0x4c, 0x5e, 0xb2, 0x03, 0x0d, 0xf6, 0x52, 0xb1, 0xf5, 0x30, 0x22, 0xfd, 0x82, 0x07, 0x34, 0x9f, 0x02, 0x21, 0x00, 0xb9, 0x0d, 0x9b, 0xbf, 0x2f, 0x33, 0x66, 0xce, 0x17, 0x6e, 0x5e, 0x78, 0x0a, 0x00, 0x43, 0x3d, 0xa6, 0x7d, 0x9e, 0x5c, 0x79, 0x31, 0x2c, 0x63, 0x88, 0x31, 0x2a, 0x29, 0x6a, 0x58, 0x00, 0x39, 0x01, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0x48, 0x30, 0x45, 0x02, 0x20, 0x17, 0x23, 0xe6, 0x92, 0xe5, 0xf4, 0x09, 0xa7, 0x15, 0x1d, 0xb3, 0x86, 0x29, 0x1b, 0x63, 0x52, 0x4c, 0x5e, 0xb2, 0x03, 0x0d, 0xf6, 0x52, 0xb1, 0xf5, 0x30, 0x22, 0xfd, 0x82, 0x07, 0x34, 0x9f, 0x02, 0x21, 0x00, 0xb9, 0x0d, 0x9b, 0xbf, 0x2f, 0x33, 0x66, 0xce, 0x17, 0x6e, 0x5e, 0x78, 0x0a, 0x00, 0x43, 0x3d, 0xa6, 0x7d, 0x9e, 0x5c, 0x79, 0x31, 0x2c, 0x63, 0x88, 0x31, 0x2a, 0x29, 0x6a, 0x58, 0x00, 0x39, 0x01, 0x75, 0xac, 0x48, 0x30, 0x45, 0x02, 0x20, 0x64, 0x6b, 0x72, 0xc3, 0x5b, 0xee, 0xec, 0x51, 0xf4, 0xd5, 0xbc, 0x1c, 0xba, 0xe0, 0x18, 0x63, 0x82, 0x57, 0x50, 0xd7, 0xf4, 0x90, 0x86, 0x4a, 0xf3, 0x54, 0xe6, 0xea, 0x4f, 0x62, 0x5e, 0x9c, 0x02, 0x21, 0x00, 0xf0, 0x4b, 0x98, 0x43, 0x2d, 0xf3, 0xa9, 0x64, 0x17, 0x19, 0xdb, 0xce, 0xd5, 0x33, 0x93, 0x02, 0x2e, 0x72, 0x49, 0xfb, 0x59, 0xdb, 0x99, 0x3a, 0xf1, 0x11, 0x85, 0x39, 0x83, 0x0a, 0xab, 0x87, 0x01, 0x48, 0x30, 0x45, 0x02, 0x20, 0x17, 0x23, 0xe6, 0x92, 0xe5, 0xf4, 0x09, 0xa7, 0x15, 0x1d, 0xb3, 0x86, 0x29, 0x1b, 0x63, 0x52, 0x4c, 0x5e, 0xb2, 0x03, 0x0d, 0xf6, 0x52, 0xb1, 0xf5, 0x30, 0x22, 0xfd, 0x82, 0x07, 0x34, 0x9f, 0x02, 0x21, 0x00, 0xb9, 0x0d, 0x9b, 0xbf, 0x2f, 0x33, 0x66, 0xce, 0x17, 0x6e, 0x5e, 0x78, 0x0a, 0x00, 0x43, 0x3d, 0xa6, 0x7d, 0x9e, 0x5c, 0x79, 0x31, 0x2c, 0x63, 0x88, 0x31, 0x2a, 0x29, 0x6a, 0x58, 0x00, 0x39, 0x01, 0x75, 0x21, 0x03, 0x84, 0x79, 0xa0, 0xfa, 0x99, 0x8c, 0xd3, 0x52, 0x59, 0xa2, 0xef, 0x0a, 0x7a, 0x5c, 0x68, 0x66, 0x2c, 0x14, 0x74, 0xf8, 0x8c, 0xcb, 0x6d, 0x08, 0xa7, 0x67, 0x7b, 0xbe, 0xc7, 0xf2, 0x20, 0x41, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),

    // FindAndDelete() in redeemScript
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xb5, 0xb5, 0x98, 0xde, 0x91, 0x78, 0x74, 0x39, 0xaf, 0xd5, 0x93, 0x81, 0x16, 0x65, 0x4e, 0x0b, 0x16, 0xb7, 0xa0, 0xd0, 0xf8, 0x27, 0x42, 0xba, 0x37, 0x56, 0x42, 0x19, 0xc5, 0xaf, 0xcb, 0xf9],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xf6, 0xf3, 0x65, 0xc4, 0x0f, 0x07, 0x39, 0xb6, 0x1d, 0xe8, 0x27, 0xa4, 0x47, 0x51, 0xe5, 0xe9, 0x90, 0x32, 0xed, 0x8f])),
                    .equalVerify,
                    .checkSig
                ]
            ),
            .init(
                transactionIdentifier: [0xab, 0x98, 0x05, 0xc6, 0xd5, 0x7d, 0x70, 0x70, 0xd9, 0xa4, 0x2c, 0x51, 0x76, 0xe4, 0x7b, 0xb7, 0x05, 0x02, 0x3e, 0x6b, 0x67, 0x24, 0x9f, 0xb6, 0x76, 0x08, 0x80, 0x54, 0x82, 0x98, 0xe7, 0x42],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .hash160,
                    .pushBytes(.init([0xd8, 0xda, 0xcd, 0xad, 0xb7, 0x46, 0x2a, 0xe1, 0x5c, 0xd9, 0x06, 0xf1, 0x87, 0x87, 0x06, 0xd0, 0xda, 0x86, 0x60, 0xe6])),
                    .equal
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0xf9, 0xcb, 0xaf, 0xc5, 0x19, 0x42, 0x56, 0x37, 0xba, 0x42, 0x27, 0xf8, 0xd0, 0xa0, 0xb7, 0x16, 0x0b, 0x4e, 0x65, 0x16, 0x81, 0x93, 0xd5, 0xaf, 0x39, 0x74, 0x78, 0x91, 0xde, 0x98, 0xb5, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0x8d, 0xd6, 0x19, 0xc5, 0x63, 0xe5, 0x27, 0xc4, 0x7d, 0x9b, 0xd5, 0x35, 0x34, 0xa7, 0x70, 0xb1, 0x02, 0xe4, 0x0f, 0xaa, 0x87, 0xf6, 0x14, 0x33, 0x58, 0x0e, 0x04, 0xe2, 0x71, 0xef, 0x2f, 0x96, 0x02, 0x20, 0x02, 0x98, 0x86, 0x43, 0x4e, 0x18, 0x12, 0x2b, 0x53, 0xd5, 0xde, 0xcd, 0x25, 0xf1, 0xf4, 0xac, 0xb2, 0x48, 0x06, 0x59, 0xfe, 0xa2, 0x0a, 0xab, 0xd8, 0x56, 0x98, 0x7b, 0xa3, 0xc3, 0x90, 0x7e, 0x01, 0x21, 0x02, 0x2b, 0x78, 0xb7, 0x56, 0xe2, 0x25, 0x8a, 0xf1, 0x37, 0x79, 0xc1, 0xa1, 0xf3, 0x7e, 0xa6, 0x80, 0x02, 0x59, 0x71, 0x6c, 0xa4, 0xb7, 0xf0, 0xb8, 0x76, 0x10, 0xe0, 0xbf, 0x3a, 0xb5, 0x2a, 0x01, 0xff, 0xff, 0xff, 0xff, 0x42, 0xe7, 0x98, 0x82, 0x54, 0x80, 0x08, 0x76, 0xb6, 0x9f, 0x24, 0x67, 0x6b, 0x3e, 0x02, 0x05, 0xb7, 0x7b, 0xe4, 0x76, 0x51, 0x2c, 0xa4, 0xd9, 0x70, 0x70, 0x7d, 0xd5, 0xc6, 0x05, 0x98, 0xab, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x26, 0x01, 0x00, 0x48, 0x30, 0x45, 0x02, 0x20, 0x15, 0xbd, 0x01, 0x39, 0xbc, 0xcc, 0xf9, 0x90, 0xa6, 0xaf, 0x6e, 0xc5, 0xc1, 0xc5, 0x2e, 0xd8, 0x22, 0x2e, 0x03, 0xa0, 0xd5, 0x1c, 0x33, 0x4d, 0xf1, 0x39, 0x96, 0x85, 0x25, 0xd2, 0xfc, 0xd2, 0x02, 0x21, 0x00, 0x9f, 0x9e, 0xfe, 0x32, 0x54, 0x76, 0xeb, 0x64, 0xc3, 0x95, 0x8e, 0x47, 0x13, 0xe9, 0xee, 0xfe, 0x49, 0xbf, 0x1d, 0x82, 0x0e, 0xd5, 0x8d, 0x21, 0x12, 0x72, 0x1b, 0x13, 0x4e, 0x2a, 0x1a, 0x53, 0x03, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0x84, 0x31, 0xbd, 0xfa, 0x72, 0xbc, 0x67, 0xf9, 0xd4, 0x1f, 0xe7, 0x2e, 0x94, 0xc8, 0x8f, 0xb8, 0xf3, 0x59, 0xff, 0xa3, 0x0b, 0x33, 0xc7, 0x2c, 0x12, 0x1c, 0x5a, 0x87, 0x7d, 0x92, 0x2e, 0x10, 0x02, 0x21, 0x00, 0x89, 0xef, 0x5f, 0xc2, 0x2d, 0xd8, 0xbf, 0xc6, 0xbf, 0x9f, 0xfd, 0xb0, 0x1a, 0x98, 0x62, 0xd2, 0x76, 0x87, 0xd4, 0x24, 0xd1, 0xfe, 0xfb, 0xab, 0x9e, 0x9c, 0x71, 0x76, 0x84, 0x4a, 0x18, 0x7a, 0x01, 0x4c, 0x90, 0x52, 0x48, 0x30, 0x45, 0x02, 0x20, 0x15, 0xbd, 0x01, 0x39, 0xbc, 0xcc, 0xf9, 0x90, 0xa6, 0xaf, 0x6e, 0xc5, 0xc1, 0xc5, 0x2e, 0xd8, 0x22, 0x2e, 0x03, 0xa0, 0xd5, 0x1c, 0x33, 0x4d, 0xf1, 0x39, 0x96, 0x85, 0x25, 0xd2, 0xfc, 0xd2, 0x02, 0x21, 0x00, 0x9f, 0x9e, 0xfe, 0x32, 0x54, 0x76, 0xeb, 0x64, 0xc3, 0x95, 0x8e, 0x47, 0x13, 0xe9, 0xee, 0xfe, 0x49, 0xbf, 0x1d, 0x82, 0x0e, 0xd5, 0x8d, 0x21, 0x12, 0x72, 0x1b, 0x13, 0x4e, 0x2a, 0x1a, 0x53, 0x03, 0x21, 0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71, 0x21, 0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71, 0x53, 0xae, 0xff, 0xff, 0xff, 0xff, 0x01, 0xa0, 0x86, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xa9, 0x14, 0xd8, 0xda, 0xcd, 0xad, 0xb7, 0x46, 0x2a, 0xe1, 0x5c, 0xd9, 0x06, 0xf1, 0x87, 0x87, 0x06, 0xd0, 0xda, 0x86, 0x60, 0xe6, 0x87, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "P2SH,CONST_SCRIPTCODE"
    ),

    // FindAndDelete() in bare CHECKMULTISIG
    .init(
        previousOutputs: [
            .init(
                transactionIdentifier: [0xce, 0xaf, 0xe5, 0x8e, 0x0f, 0x6e, 0x7d, 0x67, 0xc0, 0x40, 0x9f, 0xbb, 0xf6, 0x73, 0xc8, 0x4c, 0x16, 0x6e, 0x3c, 0x5d, 0x3c, 0x24, 0xaf, 0x58, 0xf7, 0x17, 0x5b, 0x18, 0xdf, 0x3b, 0xb3, 0xdb],
                outputIndex: 0,
                amount: 0,
                scriptOperations: [
                    .dup,
                    .hash160,
                    .pushBytes(.init([0xf6, 0xf3, 0x65, 0xc4, 0x0f, 0x07, 0x39, 0xb6, 0x1d, 0xe8, 0x27, 0xa4, 0x47, 0x51, 0xe5, 0xe9, 0x90, 0x32, 0xed, 0x8f])),
                    .equalVerify,
                    .checkSig
                ]
            ),
            .init(
                transactionIdentifier: [0xce, 0xaf, 0xe5, 0x8e, 0x0f, 0x6e, 0x7d, 0x67, 0xc0, 0x40, 0x9f, 0xbb, 0xf6, 0x73, 0xc8, 0x4c, 0x16, 0x6e, 0x3c, 0x5d, 0x3c, 0x24, 0xaf, 0x58, 0xf7, 0x17, 0x5b, 0x18, 0xdf, 0x3b, 0xb3, 0xdb],
                outputIndex: 1,
                amount: 0,
                scriptOperations: [
                    .constant(2),
                    .pushBytes(.init([0x30, 0x45, 0x02, 0x20, 0x15, 0xbd, 0x01, 0x39, 0xbc, 0xcc, 0xf9, 0x90, 0xa6, 0xaf, 0x6e, 0xc5, 0xc1, 0xc5, 0x2e, 0xd8, 0x22, 0x2e, 0x03, 0xa0, 0xd5, 0x1c, 0x33, 0x4d, 0xf1, 0x39, 0x96, 0x85, 0x25, 0xd2, 0xfc, 0xd2, 0x02, 0x21, 0x00, 0x9f, 0x9e, 0xfe, 0x32, 0x54, 0x76, 0xeb, 0x64, 0xc3, 0x95, 0x8e, 0x47, 0x13, 0xe9, 0xee, 0xfe, 0x49, 0xbf, 0x1d, 0x82, 0x0e, 0xd5, 0x8d, 0x21, 0x12, 0x72, 0x1b, 0x13, 0x4e, 0x2a, 0x1a, 0x53, 0x03])),
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .pushBytes(.init([0x03, 0x78, 0xd4, 0x30, 0x27, 0x4f, 0x8c, 0x5e, 0xc1, 0x32, 0x13, 0x38, 0x15, 0x1e, 0x9f, 0x27, 0xf4, 0xc6, 0x76, 0xa0, 0x08, 0xbd, 0xf8, 0x63, 0x8d, 0x07, 0xc0, 0xb6, 0xbe, 0x9a, 0xb3, 0x5c, 0x71])),
                    .constant(3),
                    .checkMultiSig
                ]
            ),
        ],
        serializedTransaction: [0x01, 0x00, 0x00, 0x00, 0x02, 0xdb, 0xb3, 0x3b, 0xdf, 0x18, 0x5b, 0x17, 0xf7, 0x58, 0xaf, 0x24, 0x3c, 0x5d, 0x3c, 0x6e, 0x16, 0x4c, 0xc8, 0x73, 0xf6, 0xbb, 0x9f, 0x40, 0xc0, 0x67, 0x7d, 0x6e, 0x0f, 0x8e, 0xe5, 0xaf, 0xce, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x48, 0x30, 0x45, 0x02, 0x21, 0x00, 0x96, 0x27, 0x44, 0x43, 0x20, 0xdc, 0x5e, 0xf8, 0xd7, 0xf6, 0x8f, 0x35, 0x01, 0x0b, 0x4c, 0x05, 0x0a, 0x6e, 0xd0, 0xd9, 0x6b, 0x67, 0xa8, 0x4d, 0xb9, 0x9f, 0xda, 0x9c, 0x9d, 0xe5, 0x8b, 0x1e, 0x02, 0x20, 0x3e, 0x4b, 0x4a, 0xaa, 0x01, 0x9e, 0x01, 0x2e, 0x65, 0xd6, 0x9b, 0x48, 0x7f, 0xdf, 0x87, 0x19, 0xdf, 0x72, 0xf4, 0x88, 0xfa, 0x91, 0x50, 0x6a, 0x80, 0xc4, 0x9a, 0x33, 0x92, 0x9f, 0x1f, 0xd5, 0x01, 0x21, 0x02, 0x2b, 0x78, 0xb7, 0x56, 0xe2, 0x25, 0x8a, 0xf1, 0x37, 0x79, 0xc1, 0xa1, 0xf3, 0x7e, 0xa6, 0x80, 0x02, 0x59, 0x71, 0x6c, 0xa4, 0xb7, 0xf0, 0xb8, 0x76, 0x10, 0xe0, 0xbf, 0x3a, 0xb5, 0x2a, 0x01, 0xff, 0xff, 0xff, 0xff, 0xdb, 0xb3, 0x3b, 0xdf, 0x18, 0x5b, 0x17, 0xf7, 0x58, 0xaf, 0x24, 0x3c, 0x5d, 0x3c, 0x6e, 0x16, 0x4c, 0xc8, 0x73, 0xf6, 0xbb, 0x9f, 0x40, 0xc0, 0x67, 0x7d, 0x6e, 0x0f, 0x8e, 0xe5, 0xaf, 0xce, 0x01, 0x00, 0x00, 0x00, 0x93, 0x00, 0x48, 0x30, 0x45, 0x02, 0x20, 0x15, 0xbd, 0x01, 0x39, 0xbc, 0xcc, 0xf9, 0x90, 0xa6, 0xaf, 0x6e, 0xc5, 0xc1, 0xc5, 0x2e, 0xd8, 0x22, 0x2e, 0x03, 0xa0, 0xd5, 0x1c, 0x33, 0x4d, 0xf1, 0x39, 0x96, 0x85, 0x25, 0xd2, 0xfc, 0xd2, 0x02, 0x21, 0x00, 0x9f, 0x9e, 0xfe, 0x32, 0x54, 0x76, 0xeb, 0x64, 0xc3, 0x95, 0x8e, 0x47, 0x13, 0xe9, 0xee, 0xfe, 0x49, 0xbf, 0x1d, 0x82, 0x0e, 0xd5, 0x8d, 0x21, 0x12, 0x72, 0x1b, 0x13, 0x4e, 0x2a, 0x1a, 0x53, 0x03, 0x48, 0x30, 0x45, 0x02, 0x20, 0x15, 0xbd, 0x01, 0x39, 0xbc, 0xcc, 0xf9, 0x90, 0xa6, 0xaf, 0x6e, 0xc5, 0xc1, 0xc5, 0x2e, 0xd8, 0x22, 0x2e, 0x03, 0xa0, 0xd5, 0x1c, 0x33, 0x4d, 0xf1, 0x39, 0x96, 0x85, 0x25, 0xd2, 0xfc, 0xd2, 0x02, 0x21, 0x00, 0x9f, 0x9e, 0xfe, 0x32, 0x54, 0x76, 0xeb, 0x64, 0xc3, 0x95, 0x8e, 0x47, 0x13, 0xe9, 0xee, 0xfe, 0x49, 0xbf, 0x1d, 0x82, 0x0e, 0xd5, 0x8d, 0x21, 0x12, 0x72, 0x1b, 0x13, 0x4e, 0x2a, 0x1a, 0x53, 0x03, 0xff, 0xff, 0xff, 0xff, 0x01, 0xa0, 0x86, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x9b, 0xc0, 0xbb, 0xdd, 0x30, 0x24, 0xda, 0x4d, 0x0c, 0x38, 0xed, 0x1a, 0xec, 0xf5, 0xc6, 0x8d, 0xd1, 0xd3, 0xfa, 0x12, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00],
        verifyFlags: "CONST_SCRIPTCODE"
    ),
]
